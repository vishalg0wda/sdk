/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { logDrainsGetAllLogDrains } from "../../funcs/logDrainsGetAllLogDrains.js";
import { GetAllLogDrainsRequest$inboundSchema } from "../../models/getalllogdrainsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetAllLogDrainsRequest$inboundSchema,
};

export const tool$logDrainsGetAllLogDrains: ToolDefinition<typeof args> = {
  name: "log-drains_get-all-log-drains",
  description: `Retrieves a list of all the Log Drains

Retrieves a list of all the Log Drains owned by the account. This endpoint must be called with an account AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated account can be accessed.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await logDrainsGetAllLogDrains(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
