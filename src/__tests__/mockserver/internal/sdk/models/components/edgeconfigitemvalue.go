// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type EdgeConfigItemValueType string

const (
	EdgeConfigItemValueTypeStr                        EdgeConfigItemValueType = "str"
	EdgeConfigItemValueTypeNumber                     EdgeConfigItemValueType = "number"
	EdgeConfigItemValueTypeBoolean                    EdgeConfigItemValueType = "boolean"
	EdgeConfigItemValueTypeMapOfEdgeConfigItemValue   EdgeConfigItemValueType = "mapOfEdgeConfigItemValue"
	EdgeConfigItemValueTypeArrayOfEdgeConfigItemValue EdgeConfigItemValueType = "arrayOfEdgeConfigItemValue"
)

type EdgeConfigItemValue struct {
	Str                        *string
	Number                     *float64
	Boolean                    *bool
	MapOfEdgeConfigItemValue   map[string]*EdgeConfigItemValue
	ArrayOfEdgeConfigItemValue []*EdgeConfigItemValue

	Type EdgeConfigItemValueType
}

func CreateEdgeConfigItemValueStr(str string) EdgeConfigItemValue {
	typ := EdgeConfigItemValueTypeStr

	return EdgeConfigItemValue{
		Str:  &str,
		Type: typ,
	}
}

func CreateEdgeConfigItemValueNumber(number float64) EdgeConfigItemValue {
	typ := EdgeConfigItemValueTypeNumber

	return EdgeConfigItemValue{
		Number: &number,
		Type:   typ,
	}
}

func CreateEdgeConfigItemValueBoolean(boolean bool) EdgeConfigItemValue {
	typ := EdgeConfigItemValueTypeBoolean

	return EdgeConfigItemValue{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateEdgeConfigItemValueMapOfEdgeConfigItemValue(mapOfEdgeConfigItemValue map[string]*EdgeConfigItemValue) EdgeConfigItemValue {
	typ := EdgeConfigItemValueTypeMapOfEdgeConfigItemValue

	return EdgeConfigItemValue{
		MapOfEdgeConfigItemValue: mapOfEdgeConfigItemValue,
		Type:                     typ,
	}
}

func CreateEdgeConfigItemValueArrayOfEdgeConfigItemValue(arrayOfEdgeConfigItemValue []*EdgeConfigItemValue) EdgeConfigItemValue {
	typ := EdgeConfigItemValueTypeArrayOfEdgeConfigItemValue

	return EdgeConfigItemValue{
		ArrayOfEdgeConfigItemValue: arrayOfEdgeConfigItemValue,
		Type:                       typ,
	}
}

func (u *EdgeConfigItemValue) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = EdgeConfigItemValueTypeStr
		return nil
	}

	var number float64 = float64(0)
	if err := utils.UnmarshalJSON(data, &number, "", true, true); err == nil {
		u.Number = &number
		u.Type = EdgeConfigItemValueTypeNumber
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, true); err == nil {
		u.Boolean = &boolean
		u.Type = EdgeConfigItemValueTypeBoolean
		return nil
	}

	var mapOfEdgeConfigItemValue map[string]*EdgeConfigItemValue = map[string]*EdgeConfigItemValue{}
	if err := utils.UnmarshalJSON(data, &mapOfEdgeConfigItemValue, "", true, true); err == nil {
		u.MapOfEdgeConfigItemValue = mapOfEdgeConfigItemValue
		u.Type = EdgeConfigItemValueTypeMapOfEdgeConfigItemValue
		return nil
	}

	var arrayOfEdgeConfigItemValue []*EdgeConfigItemValue = []*EdgeConfigItemValue{}
	if err := utils.UnmarshalJSON(data, &arrayOfEdgeConfigItemValue, "", true, true); err == nil {
		u.ArrayOfEdgeConfigItemValue = arrayOfEdgeConfigItemValue
		u.Type = EdgeConfigItemValueTypeArrayOfEdgeConfigItemValue
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for EdgeConfigItemValue", string(data))
}

func (u EdgeConfigItemValue) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.Number != nil {
		return utils.MarshalJSON(u.Number, "", true)
	}

	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.MapOfEdgeConfigItemValue != nil {
		return utils.MarshalJSON(u.MapOfEdgeConfigItemValue, "", true)
	}

	if u.ArrayOfEdgeConfigItemValue != nil {
		return utils.MarshalJSON(u.ArrayOfEdgeConfigItemValue, "", true)
	}

	return nil, errors.New("could not marshal union type EdgeConfigItemValue: all fields are null")
}
