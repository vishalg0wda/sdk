// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type RemoveProjectEnvRequest struct {
	// The unique project identifier or the project name
	IDOrName string `pathParam:"style=simple,explode=false,name=idOrName"`
	// The unique environment variable identifier
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The unique custom environment identifier within the project
	CustomEnvironmentID *string `queryParam:"style=form,explode=true,name=customEnvironmentId"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *RemoveProjectEnvRequest) GetIDOrName() string {
	if o == nil {
		return ""
	}
	return o.IDOrName
}

func (o *RemoveProjectEnvRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *RemoveProjectEnvRequest) GetCustomEnvironmentID() *string {
	if o == nil {
		return nil
	}
	return o.CustomEnvironmentID
}

func (o *RemoveProjectEnvRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *RemoveProjectEnvRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type RemoveProjectEnvTargetProjectsResponse2 string

const (
	RemoveProjectEnvTargetProjectsResponse2Production  RemoveProjectEnvTargetProjectsResponse2 = "production"
	RemoveProjectEnvTargetProjectsResponse2Preview     RemoveProjectEnvTargetProjectsResponse2 = "preview"
	RemoveProjectEnvTargetProjectsResponse2Development RemoveProjectEnvTargetProjectsResponse2 = "development"
)

func (e RemoveProjectEnvTargetProjectsResponse2) ToPointer() *RemoveProjectEnvTargetProjectsResponse2 {
	return &e
}
func (e *RemoveProjectEnvTargetProjectsResponse2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "production":
		fallthrough
	case "preview":
		fallthrough
	case "development":
		*e = RemoveProjectEnvTargetProjectsResponse2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvTargetProjectsResponse2: %v", v)
	}
}

type RemoveProjectEnvTargetProjectsResponse1 string

const (
	RemoveProjectEnvTargetProjectsResponse1Production  RemoveProjectEnvTargetProjectsResponse1 = "production"
	RemoveProjectEnvTargetProjectsResponse1Preview     RemoveProjectEnvTargetProjectsResponse1 = "preview"
	RemoveProjectEnvTargetProjectsResponse1Development RemoveProjectEnvTargetProjectsResponse1 = "development"
)

func (e RemoveProjectEnvTargetProjectsResponse1) ToPointer() *RemoveProjectEnvTargetProjectsResponse1 {
	return &e
}
func (e *RemoveProjectEnvTargetProjectsResponse1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "production":
		fallthrough
	case "preview":
		fallthrough
	case "development":
		*e = RemoveProjectEnvTargetProjectsResponse1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvTargetProjectsResponse1: %v", v)
	}
}

type RemoveProjectEnvResponseBodyProjectsResponseTargetType string

const (
	RemoveProjectEnvResponseBodyProjectsResponseTargetTypeArrayOfRemoveProjectEnvTargetProjectsResponse1 RemoveProjectEnvResponseBodyProjectsResponseTargetType = "arrayOfRemoveProjectEnvTargetProjectsResponse1"
	RemoveProjectEnvResponseBodyProjectsResponseTargetTypeRemoveProjectEnvTargetProjectsResponse2        RemoveProjectEnvResponseBodyProjectsResponseTargetType = "removeProjectEnv_target_projects_response_2"
)

type RemoveProjectEnvResponseBodyProjectsResponseTarget struct {
	ArrayOfRemoveProjectEnvTargetProjectsResponse1 []RemoveProjectEnvTargetProjectsResponse1
	RemoveProjectEnvTargetProjectsResponse2        *RemoveProjectEnvTargetProjectsResponse2

	Type RemoveProjectEnvResponseBodyProjectsResponseTargetType
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseTargetArrayOfRemoveProjectEnvTargetProjectsResponse1(arrayOfRemoveProjectEnvTargetProjectsResponse1 []RemoveProjectEnvTargetProjectsResponse1) RemoveProjectEnvResponseBodyProjectsResponseTarget {
	typ := RemoveProjectEnvResponseBodyProjectsResponseTargetTypeArrayOfRemoveProjectEnvTargetProjectsResponse1

	return RemoveProjectEnvResponseBodyProjectsResponseTarget{
		ArrayOfRemoveProjectEnvTargetProjectsResponse1: arrayOfRemoveProjectEnvTargetProjectsResponse1,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseTargetRemoveProjectEnvTargetProjectsResponse2(removeProjectEnvTargetProjectsResponse2 RemoveProjectEnvTargetProjectsResponse2) RemoveProjectEnvResponseBodyProjectsResponseTarget {
	typ := RemoveProjectEnvResponseBodyProjectsResponseTargetTypeRemoveProjectEnvTargetProjectsResponse2

	return RemoveProjectEnvResponseBodyProjectsResponseTarget{
		RemoveProjectEnvTargetProjectsResponse2: &removeProjectEnvTargetProjectsResponse2,
		Type:                                    typ,
	}
}

func (u *RemoveProjectEnvResponseBodyProjectsResponseTarget) UnmarshalJSON(data []byte) error {

	var arrayOfRemoveProjectEnvTargetProjectsResponse1 []RemoveProjectEnvTargetProjectsResponse1 = []RemoveProjectEnvTargetProjectsResponse1{}
	if err := utils.UnmarshalJSON(data, &arrayOfRemoveProjectEnvTargetProjectsResponse1, "", true, true); err == nil {
		u.ArrayOfRemoveProjectEnvTargetProjectsResponse1 = arrayOfRemoveProjectEnvTargetProjectsResponse1
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseTargetTypeArrayOfRemoveProjectEnvTargetProjectsResponse1
		return nil
	}

	var removeProjectEnvTargetProjectsResponse2 RemoveProjectEnvTargetProjectsResponse2 = RemoveProjectEnvTargetProjectsResponse2("")
	if err := utils.UnmarshalJSON(data, &removeProjectEnvTargetProjectsResponse2, "", true, true); err == nil {
		u.RemoveProjectEnvTargetProjectsResponse2 = &removeProjectEnvTargetProjectsResponse2
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseTargetTypeRemoveProjectEnvTargetProjectsResponse2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RemoveProjectEnvResponseBodyProjectsResponseTarget", string(data))
}

func (u RemoveProjectEnvResponseBodyProjectsResponseTarget) MarshalJSON() ([]byte, error) {
	if u.ArrayOfRemoveProjectEnvTargetProjectsResponse1 != nil {
		return utils.MarshalJSON(u.ArrayOfRemoveProjectEnvTargetProjectsResponse1, "", true)
	}

	if u.RemoveProjectEnvTargetProjectsResponse2 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvTargetProjectsResponse2, "", true)
	}

	return nil, errors.New("could not marshal union type RemoveProjectEnvResponseBodyProjectsResponseTarget: all fields are null")
}

type RemoveProjectEnvResponseBodyProjectsResponseType string

const (
	RemoveProjectEnvResponseBodyProjectsResponseTypeSystem    RemoveProjectEnvResponseBodyProjectsResponseType = "system"
	RemoveProjectEnvResponseBodyProjectsResponseTypeEncrypted RemoveProjectEnvResponseBodyProjectsResponseType = "encrypted"
	RemoveProjectEnvResponseBodyProjectsResponseTypePlain     RemoveProjectEnvResponseBodyProjectsResponseType = "plain"
	RemoveProjectEnvResponseBodyProjectsResponseTypeSensitive RemoveProjectEnvResponseBodyProjectsResponseType = "sensitive"
	RemoveProjectEnvResponseBodyProjectsResponseTypeSecret    RemoveProjectEnvResponseBodyProjectsResponseType = "secret"
)

func (e RemoveProjectEnvResponseBodyProjectsResponseType) ToPointer() *RemoveProjectEnvResponseBodyProjectsResponseType {
	return &e
}
func (e *RemoveProjectEnvResponseBodyProjectsResponseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "system":
		fallthrough
	case "encrypted":
		fallthrough
	case "plain":
		fallthrough
	case "sensitive":
		fallthrough
	case "secret":
		*e = RemoveProjectEnvResponseBodyProjectsResponseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvResponseBodyProjectsResponseType: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315TypeFlagsConnectionString RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type = "flags-connection-string"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "flags-connection-string":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse15 struct {
	Type      RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type `json:"type"`
	ProjectID string                                                                           `json:"projectId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse15) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody315Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse15) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314TypeIntegrationStoreSecret RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type = "integration-store-secret"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "integration-store-secret":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse14 struct {
	Type                       RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type `json:"type"`
	StoreID                    string                                                                           `json:"storeId"`
	IntegrationID              string                                                                           `json:"integrationId"`
	IntegrationProductID       string                                                                           `json:"integrationProductId"`
	IntegrationConfigurationID string                                                                           `json:"integrationConfigurationId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse14) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody314Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse14) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

func (o *RemoveProjectEnvContentHintProjectsResponse14) GetIntegrationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationID
}

func (o *RemoveProjectEnvContentHintProjectsResponse14) GetIntegrationProductID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationProductID
}

func (o *RemoveProjectEnvContentHintProjectsResponse14) GetIntegrationConfigurationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationConfigurationID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313TypePostgresURLNoSsl RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type = "postgres-url-no-ssl"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-url-no-ssl":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse13 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse13) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody313Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse13) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312TypePostgresDatabase RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type = "postgres-database"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-database":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse12 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse12) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody312Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse12) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311TypePostgresPassword RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type = "postgres-password"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-password":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse11 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse11) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody311Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse11) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310TypePostgresHost RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type = "postgres-host"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-host":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse10 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse10) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody310Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse10) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39TypePostgresUser RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type = "postgres-user"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-user":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse9 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse9) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody39Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse9) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38TypePostgresPrismaURL RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type = "postgres-prisma-url"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-prisma-url":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse8 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse8) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody38Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse8) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37TypePostgresURLNonPooling RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type = "postgres-url-non-pooling"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-url-non-pooling":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse7 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse7) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody37Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse7) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36TypePostgresURL RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type = "postgres-url"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-url":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse6 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse6) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody36Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse6) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35TypeBlobReadWriteToken RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type = "blob-read-write-token"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "blob-read-write-token":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse5 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse5) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody35Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse5) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34TypeRedisRestAPIReadOnlyToken RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type = "redis-rest-api-read-only-token"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-rest-api-read-only-token":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse4 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse4) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody34Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse4) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33TypeRedisRestAPIToken RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type = "redis-rest-api-token"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-rest-api-token":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse3 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse3) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody33Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse3) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32TypeRedisRestAPIURL RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type = "redis-rest-api-url"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-rest-api-url":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse2 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse2) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody32Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse2) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3TypeRedisURL RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type = "redis-url"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-url":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse1 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type `json:"type"`
	StoreID string                                                                         `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjectsResponse1) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody3Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjectsResponse1) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvResponseBodyProjectsResponseContentHintType string

const (
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse1  RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_1"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse2  RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_2"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse3  RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_3"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse4  RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_4"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse5  RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_5"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse6  RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_6"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse7  RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_7"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse8  RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_8"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse9  RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_9"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse10 RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_10"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse11 RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_11"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse12 RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_12"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse13 RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_13"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse14 RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_14"
	RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse15 RemoveProjectEnvResponseBodyProjectsResponseContentHintType = "removeProjectEnv_contentHint_projects_response_15"
)

type RemoveProjectEnvResponseBodyProjectsResponseContentHint struct {
	RemoveProjectEnvContentHintProjectsResponse1  *RemoveProjectEnvContentHintProjectsResponse1
	RemoveProjectEnvContentHintProjectsResponse2  *RemoveProjectEnvContentHintProjectsResponse2
	RemoveProjectEnvContentHintProjectsResponse3  *RemoveProjectEnvContentHintProjectsResponse3
	RemoveProjectEnvContentHintProjectsResponse4  *RemoveProjectEnvContentHintProjectsResponse4
	RemoveProjectEnvContentHintProjectsResponse5  *RemoveProjectEnvContentHintProjectsResponse5
	RemoveProjectEnvContentHintProjectsResponse6  *RemoveProjectEnvContentHintProjectsResponse6
	RemoveProjectEnvContentHintProjectsResponse7  *RemoveProjectEnvContentHintProjectsResponse7
	RemoveProjectEnvContentHintProjectsResponse8  *RemoveProjectEnvContentHintProjectsResponse8
	RemoveProjectEnvContentHintProjectsResponse9  *RemoveProjectEnvContentHintProjectsResponse9
	RemoveProjectEnvContentHintProjectsResponse10 *RemoveProjectEnvContentHintProjectsResponse10
	RemoveProjectEnvContentHintProjectsResponse11 *RemoveProjectEnvContentHintProjectsResponse11
	RemoveProjectEnvContentHintProjectsResponse12 *RemoveProjectEnvContentHintProjectsResponse12
	RemoveProjectEnvContentHintProjectsResponse13 *RemoveProjectEnvContentHintProjectsResponse13
	RemoveProjectEnvContentHintProjectsResponse14 *RemoveProjectEnvContentHintProjectsResponse14
	RemoveProjectEnvContentHintProjectsResponse15 *RemoveProjectEnvContentHintProjectsResponse15

	Type RemoveProjectEnvResponseBodyProjectsResponseContentHintType
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse1(removeProjectEnvContentHintProjectsResponse1 RemoveProjectEnvContentHintProjectsResponse1) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse1

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse1: &removeProjectEnvContentHintProjectsResponse1,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse2(removeProjectEnvContentHintProjectsResponse2 RemoveProjectEnvContentHintProjectsResponse2) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse2

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse2: &removeProjectEnvContentHintProjectsResponse2,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse3(removeProjectEnvContentHintProjectsResponse3 RemoveProjectEnvContentHintProjectsResponse3) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse3

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse3: &removeProjectEnvContentHintProjectsResponse3,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse4(removeProjectEnvContentHintProjectsResponse4 RemoveProjectEnvContentHintProjectsResponse4) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse4

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse4: &removeProjectEnvContentHintProjectsResponse4,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse5(removeProjectEnvContentHintProjectsResponse5 RemoveProjectEnvContentHintProjectsResponse5) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse5

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse5: &removeProjectEnvContentHintProjectsResponse5,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse6(removeProjectEnvContentHintProjectsResponse6 RemoveProjectEnvContentHintProjectsResponse6) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse6

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse6: &removeProjectEnvContentHintProjectsResponse6,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse7(removeProjectEnvContentHintProjectsResponse7 RemoveProjectEnvContentHintProjectsResponse7) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse7

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse7: &removeProjectEnvContentHintProjectsResponse7,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse8(removeProjectEnvContentHintProjectsResponse8 RemoveProjectEnvContentHintProjectsResponse8) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse8

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse8: &removeProjectEnvContentHintProjectsResponse8,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse9(removeProjectEnvContentHintProjectsResponse9 RemoveProjectEnvContentHintProjectsResponse9) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse9

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse9: &removeProjectEnvContentHintProjectsResponse9,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse10(removeProjectEnvContentHintProjectsResponse10 RemoveProjectEnvContentHintProjectsResponse10) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse10

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse10: &removeProjectEnvContentHintProjectsResponse10,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse11(removeProjectEnvContentHintProjectsResponse11 RemoveProjectEnvContentHintProjectsResponse11) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse11

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse11: &removeProjectEnvContentHintProjectsResponse11,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse12(removeProjectEnvContentHintProjectsResponse12 RemoveProjectEnvContentHintProjectsResponse12) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse12

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse12: &removeProjectEnvContentHintProjectsResponse12,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse13(removeProjectEnvContentHintProjectsResponse13 RemoveProjectEnvContentHintProjectsResponse13) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse13

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse13: &removeProjectEnvContentHintProjectsResponse13,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse14(removeProjectEnvContentHintProjectsResponse14 RemoveProjectEnvContentHintProjectsResponse14) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse14

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse14: &removeProjectEnvContentHintProjectsResponse14,
		Type: typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsResponseContentHintRemoveProjectEnvContentHintProjectsResponse15(removeProjectEnvContentHintProjectsResponse15 RemoveProjectEnvContentHintProjectsResponse15) RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse15

	return RemoveProjectEnvResponseBodyProjectsResponseContentHint{
		RemoveProjectEnvContentHintProjectsResponse15: &removeProjectEnvContentHintProjectsResponse15,
		Type: typ,
	}
}

func (u *RemoveProjectEnvResponseBodyProjectsResponseContentHint) UnmarshalJSON(data []byte) error {

	var removeProjectEnvContentHintProjectsResponse7 RemoveProjectEnvContentHintProjectsResponse7 = RemoveProjectEnvContentHintProjectsResponse7{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse7, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse7 = &removeProjectEnvContentHintProjectsResponse7
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse7
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse11 RemoveProjectEnvContentHintProjectsResponse11 = RemoveProjectEnvContentHintProjectsResponse11{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse11, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse11 = &removeProjectEnvContentHintProjectsResponse11
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse11
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse3 RemoveProjectEnvContentHintProjectsResponse3 = RemoveProjectEnvContentHintProjectsResponse3{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse3, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse3 = &removeProjectEnvContentHintProjectsResponse3
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse3
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse4 RemoveProjectEnvContentHintProjectsResponse4 = RemoveProjectEnvContentHintProjectsResponse4{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse4, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse4 = &removeProjectEnvContentHintProjectsResponse4
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse4
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse5 RemoveProjectEnvContentHintProjectsResponse5 = RemoveProjectEnvContentHintProjectsResponse5{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse5, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse5 = &removeProjectEnvContentHintProjectsResponse5
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse5
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse6 RemoveProjectEnvContentHintProjectsResponse6 = RemoveProjectEnvContentHintProjectsResponse6{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse6, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse6 = &removeProjectEnvContentHintProjectsResponse6
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse6
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse2 RemoveProjectEnvContentHintProjectsResponse2 = RemoveProjectEnvContentHintProjectsResponse2{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse2, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse2 = &removeProjectEnvContentHintProjectsResponse2
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse2
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse9 RemoveProjectEnvContentHintProjectsResponse9 = RemoveProjectEnvContentHintProjectsResponse9{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse9, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse9 = &removeProjectEnvContentHintProjectsResponse9
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse9
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse1 RemoveProjectEnvContentHintProjectsResponse1 = RemoveProjectEnvContentHintProjectsResponse1{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse1, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse1 = &removeProjectEnvContentHintProjectsResponse1
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse1
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse10 RemoveProjectEnvContentHintProjectsResponse10 = RemoveProjectEnvContentHintProjectsResponse10{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse10, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse10 = &removeProjectEnvContentHintProjectsResponse10
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse10
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse8 RemoveProjectEnvContentHintProjectsResponse8 = RemoveProjectEnvContentHintProjectsResponse8{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse8, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse8 = &removeProjectEnvContentHintProjectsResponse8
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse8
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse12 RemoveProjectEnvContentHintProjectsResponse12 = RemoveProjectEnvContentHintProjectsResponse12{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse12, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse12 = &removeProjectEnvContentHintProjectsResponse12
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse12
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse13 RemoveProjectEnvContentHintProjectsResponse13 = RemoveProjectEnvContentHintProjectsResponse13{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse13, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse13 = &removeProjectEnvContentHintProjectsResponse13
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse13
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse15 RemoveProjectEnvContentHintProjectsResponse15 = RemoveProjectEnvContentHintProjectsResponse15{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse15, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse15 = &removeProjectEnvContentHintProjectsResponse15
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse15
		return nil
	}

	var removeProjectEnvContentHintProjectsResponse14 RemoveProjectEnvContentHintProjectsResponse14 = RemoveProjectEnvContentHintProjectsResponse14{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjectsResponse14, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjectsResponse14 = &removeProjectEnvContentHintProjectsResponse14
		u.Type = RemoveProjectEnvResponseBodyProjectsResponseContentHintTypeRemoveProjectEnvContentHintProjectsResponse14
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RemoveProjectEnvResponseBodyProjectsResponseContentHint", string(data))
}

func (u RemoveProjectEnvResponseBodyProjectsResponseContentHint) MarshalJSON() ([]byte, error) {
	if u.RemoveProjectEnvContentHintProjectsResponse1 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse1, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse2 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse2, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse3 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse3, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse4 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse4, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse5 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse5, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse6 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse6, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse7 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse7, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse8 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse8, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse9 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse9, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse10 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse10, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse11 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse11, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse12 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse12, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse13 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse13, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse14 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse14, "", true)
	}

	if u.RemoveProjectEnvContentHintProjectsResponse15 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjectsResponse15, "", true)
	}

	return nil, errors.New("could not marshal union type RemoveProjectEnvResponseBodyProjectsResponseContentHint: all fields are null")
}

type RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3Type string

const (
	RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3TypeFlagsSecret RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3Type = "flags-secret"
)

func (e RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3Type) ToPointer() *RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3Type {
	return &e
}
func (e *RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "flags-secret":
		*e = RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3Type: %v", v)
	}
}

// RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint - Similar to `contentHints`, but should not be exposed to the user.
type RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint struct {
	Type RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3Type `json:"type"`
	// Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
	EncryptedValue string `json:"encryptedValue"`
}

func (o *RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint) GetType() RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3Type {
	if o == nil {
		return RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSON3Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint) GetEncryptedValue() string {
	if o == nil {
		return ""
	}
	return o.EncryptedValue
}

type RemoveProjectEnvResponseBody3 struct {
	Target *RemoveProjectEnvResponseBodyProjectsResponseTarget `json:"target,omitempty"`
	Type   RemoveProjectEnvResponseBodyProjectsResponseType    `json:"type"`
	// This is used to identiy variables that have been migrated from type secret to sensitive.
	SunsetSecretID    *string                                                  `json:"sunsetSecretId,omitempty"`
	ID                *string                                                  `json:"id,omitempty"`
	Key               string                                                   `json:"key"`
	Value             string                                                   `json:"value"`
	ConfigurationID   *string                                                  `json:"configurationId,omitempty"`
	CreatedAt         *float64                                                 `json:"createdAt,omitempty"`
	UpdatedAt         *float64                                                 `json:"updatedAt,omitempty"`
	CreatedBy         *string                                                  `json:"createdBy,omitempty"`
	UpdatedBy         *string                                                  `json:"updatedBy,omitempty"`
	GitBranch         *string                                                  `json:"gitBranch,omitempty"`
	EdgeConfigID      *string                                                  `json:"edgeConfigId,omitempty"`
	EdgeConfigTokenID *string                                                  `json:"edgeConfigTokenId,omitempty"`
	ContentHint       *RemoveProjectEnvResponseBodyProjectsResponseContentHint `json:"contentHint,omitempty"`
	// Similar to `contentHints`, but should not be exposed to the user.
	InternalContentHint *RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint `json:"internalContentHint,omitempty"`
	// Whether `value` and `vsmValue` are decrypted.
	Decrypted            *bool    `json:"decrypted,omitempty"`
	Comment              *string  `json:"comment,omitempty"`
	CustomEnvironmentIds []string `json:"customEnvironmentIds,omitempty"`
	VsmValue             *string  `json:"vsmValue,omitempty"`
}

func (o *RemoveProjectEnvResponseBody3) GetTarget() *RemoveProjectEnvResponseBodyProjectsResponseTarget {
	if o == nil {
		return nil
	}
	return o.Target
}

func (o *RemoveProjectEnvResponseBody3) GetType() RemoveProjectEnvResponseBodyProjectsResponseType {
	if o == nil {
		return RemoveProjectEnvResponseBodyProjectsResponseType("")
	}
	return o.Type
}

func (o *RemoveProjectEnvResponseBody3) GetSunsetSecretID() *string {
	if o == nil {
		return nil
	}
	return o.SunsetSecretID
}

func (o *RemoveProjectEnvResponseBody3) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RemoveProjectEnvResponseBody3) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *RemoveProjectEnvResponseBody3) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *RemoveProjectEnvResponseBody3) GetConfigurationID() *string {
	if o == nil {
		return nil
	}
	return o.ConfigurationID
}

func (o *RemoveProjectEnvResponseBody3) GetCreatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *RemoveProjectEnvResponseBody3) GetUpdatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *RemoveProjectEnvResponseBody3) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *RemoveProjectEnvResponseBody3) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *RemoveProjectEnvResponseBody3) GetGitBranch() *string {
	if o == nil {
		return nil
	}
	return o.GitBranch
}

func (o *RemoveProjectEnvResponseBody3) GetEdgeConfigID() *string {
	if o == nil {
		return nil
	}
	return o.EdgeConfigID
}

func (o *RemoveProjectEnvResponseBody3) GetEdgeConfigTokenID() *string {
	if o == nil {
		return nil
	}
	return o.EdgeConfigTokenID
}

func (o *RemoveProjectEnvResponseBody3) GetContentHint() *RemoveProjectEnvResponseBodyProjectsResponseContentHint {
	if o == nil {
		return nil
	}
	return o.ContentHint
}

func (o *RemoveProjectEnvResponseBody3) GetInternalContentHint() *RemoveProjectEnvResponseBodyProjectsResponseInternalContentHint {
	if o == nil {
		return nil
	}
	return o.InternalContentHint
}

func (o *RemoveProjectEnvResponseBody3) GetDecrypted() *bool {
	if o == nil {
		return nil
	}
	return o.Decrypted
}

func (o *RemoveProjectEnvResponseBody3) GetComment() *string {
	if o == nil {
		return nil
	}
	return o.Comment
}

func (o *RemoveProjectEnvResponseBody3) GetCustomEnvironmentIds() []string {
	if o == nil {
		return nil
	}
	return o.CustomEnvironmentIds
}

func (o *RemoveProjectEnvResponseBody3) GetVsmValue() *string {
	if o == nil {
		return nil
	}
	return o.VsmValue
}

type RemoveProjectEnvTargetProjects2 string

const (
	RemoveProjectEnvTargetProjects2Production  RemoveProjectEnvTargetProjects2 = "production"
	RemoveProjectEnvTargetProjects2Preview     RemoveProjectEnvTargetProjects2 = "preview"
	RemoveProjectEnvTargetProjects2Development RemoveProjectEnvTargetProjects2 = "development"
)

func (e RemoveProjectEnvTargetProjects2) ToPointer() *RemoveProjectEnvTargetProjects2 {
	return &e
}
func (e *RemoveProjectEnvTargetProjects2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "production":
		fallthrough
	case "preview":
		fallthrough
	case "development":
		*e = RemoveProjectEnvTargetProjects2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvTargetProjects2: %v", v)
	}
}

type RemoveProjectEnvTargetProjects1 string

const (
	RemoveProjectEnvTargetProjects1Production  RemoveProjectEnvTargetProjects1 = "production"
	RemoveProjectEnvTargetProjects1Preview     RemoveProjectEnvTargetProjects1 = "preview"
	RemoveProjectEnvTargetProjects1Development RemoveProjectEnvTargetProjects1 = "development"
)

func (e RemoveProjectEnvTargetProjects1) ToPointer() *RemoveProjectEnvTargetProjects1 {
	return &e
}
func (e *RemoveProjectEnvTargetProjects1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "production":
		fallthrough
	case "preview":
		fallthrough
	case "development":
		*e = RemoveProjectEnvTargetProjects1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvTargetProjects1: %v", v)
	}
}

type RemoveProjectEnvResponseBodyProjectsTargetType string

const (
	RemoveProjectEnvResponseBodyProjectsTargetTypeArrayOfRemoveProjectEnvTargetProjects1 RemoveProjectEnvResponseBodyProjectsTargetType = "arrayOfRemoveProjectEnvTargetProjects1"
	RemoveProjectEnvResponseBodyProjectsTargetTypeRemoveProjectEnvTargetProjects2        RemoveProjectEnvResponseBodyProjectsTargetType = "removeProjectEnv_target_projects_2"
)

type RemoveProjectEnvResponseBodyProjectsTarget struct {
	ArrayOfRemoveProjectEnvTargetProjects1 []RemoveProjectEnvTargetProjects1
	RemoveProjectEnvTargetProjects2        *RemoveProjectEnvTargetProjects2

	Type RemoveProjectEnvResponseBodyProjectsTargetType
}

func CreateRemoveProjectEnvResponseBodyProjectsTargetArrayOfRemoveProjectEnvTargetProjects1(arrayOfRemoveProjectEnvTargetProjects1 []RemoveProjectEnvTargetProjects1) RemoveProjectEnvResponseBodyProjectsTarget {
	typ := RemoveProjectEnvResponseBodyProjectsTargetTypeArrayOfRemoveProjectEnvTargetProjects1

	return RemoveProjectEnvResponseBodyProjectsTarget{
		ArrayOfRemoveProjectEnvTargetProjects1: arrayOfRemoveProjectEnvTargetProjects1,
		Type:                                   typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsTargetRemoveProjectEnvTargetProjects2(removeProjectEnvTargetProjects2 RemoveProjectEnvTargetProjects2) RemoveProjectEnvResponseBodyProjectsTarget {
	typ := RemoveProjectEnvResponseBodyProjectsTargetTypeRemoveProjectEnvTargetProjects2

	return RemoveProjectEnvResponseBodyProjectsTarget{
		RemoveProjectEnvTargetProjects2: &removeProjectEnvTargetProjects2,
		Type:                            typ,
	}
}

func (u *RemoveProjectEnvResponseBodyProjectsTarget) UnmarshalJSON(data []byte) error {

	var arrayOfRemoveProjectEnvTargetProjects1 []RemoveProjectEnvTargetProjects1 = []RemoveProjectEnvTargetProjects1{}
	if err := utils.UnmarshalJSON(data, &arrayOfRemoveProjectEnvTargetProjects1, "", true, true); err == nil {
		u.ArrayOfRemoveProjectEnvTargetProjects1 = arrayOfRemoveProjectEnvTargetProjects1
		u.Type = RemoveProjectEnvResponseBodyProjectsTargetTypeArrayOfRemoveProjectEnvTargetProjects1
		return nil
	}

	var removeProjectEnvTargetProjects2 RemoveProjectEnvTargetProjects2 = RemoveProjectEnvTargetProjects2("")
	if err := utils.UnmarshalJSON(data, &removeProjectEnvTargetProjects2, "", true, true); err == nil {
		u.RemoveProjectEnvTargetProjects2 = &removeProjectEnvTargetProjects2
		u.Type = RemoveProjectEnvResponseBodyProjectsTargetTypeRemoveProjectEnvTargetProjects2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RemoveProjectEnvResponseBodyProjectsTarget", string(data))
}

func (u RemoveProjectEnvResponseBodyProjectsTarget) MarshalJSON() ([]byte, error) {
	if u.ArrayOfRemoveProjectEnvTargetProjects1 != nil {
		return utils.MarshalJSON(u.ArrayOfRemoveProjectEnvTargetProjects1, "", true)
	}

	if u.RemoveProjectEnvTargetProjects2 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvTargetProjects2, "", true)
	}

	return nil, errors.New("could not marshal union type RemoveProjectEnvResponseBodyProjectsTarget: all fields are null")
}

type RemoveProjectEnvResponseBodyProjectsType string

const (
	RemoveProjectEnvResponseBodyProjectsTypeSystem    RemoveProjectEnvResponseBodyProjectsType = "system"
	RemoveProjectEnvResponseBodyProjectsTypeEncrypted RemoveProjectEnvResponseBodyProjectsType = "encrypted"
	RemoveProjectEnvResponseBodyProjectsTypePlain     RemoveProjectEnvResponseBodyProjectsType = "plain"
	RemoveProjectEnvResponseBodyProjectsTypeSensitive RemoveProjectEnvResponseBodyProjectsType = "sensitive"
	RemoveProjectEnvResponseBodyProjectsTypeSecret    RemoveProjectEnvResponseBodyProjectsType = "secret"
)

func (e RemoveProjectEnvResponseBodyProjectsType) ToPointer() *RemoveProjectEnvResponseBodyProjectsType {
	return &e
}
func (e *RemoveProjectEnvResponseBodyProjectsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "system":
		fallthrough
	case "encrypted":
		fallthrough
	case "plain":
		fallthrough
	case "sensitive":
		fallthrough
	case "secret":
		*e = RemoveProjectEnvResponseBodyProjectsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvResponseBodyProjectsType: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215TypeFlagsConnectionString RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type = "flags-connection-string"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "flags-connection-string":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects15 struct {
	Type      RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type `json:"type"`
	ProjectID string                                                                           `json:"projectId"`
}

func (o *RemoveProjectEnvContentHintProjects15) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody215Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects15) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214TypeIntegrationStoreSecret RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type = "integration-store-secret"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "integration-store-secret":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects14 struct {
	Type                       RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type `json:"type"`
	StoreID                    string                                                                           `json:"storeId"`
	IntegrationID              string                                                                           `json:"integrationId"`
	IntegrationProductID       string                                                                           `json:"integrationProductId"`
	IntegrationConfigurationID string                                                                           `json:"integrationConfigurationId"`
}

func (o *RemoveProjectEnvContentHintProjects14) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects14) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

func (o *RemoveProjectEnvContentHintProjects14) GetIntegrationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationID
}

func (o *RemoveProjectEnvContentHintProjects14) GetIntegrationProductID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationProductID
}

func (o *RemoveProjectEnvContentHintProjects14) GetIntegrationConfigurationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationConfigurationID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213TypePostgresURLNoSsl RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type = "postgres-url-no-ssl"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-url-no-ssl":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects13 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects13) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects13) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212TypePostgresDatabase RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type = "postgres-database"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-database":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects12 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects12) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects12) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211TypePostgresPassword RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type = "postgres-password"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-password":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects11 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects11) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects11) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210TypePostgresHost RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type = "postgres-host"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-host":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects10 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects10) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects10) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29TypePostgresUser RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type = "postgres-user"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-user":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects9 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects9) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects9) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28TypePostgresPrismaURL RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type = "postgres-prisma-url"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-prisma-url":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects8 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects8) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects8) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27TypePostgresURLNonPooling RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type = "postgres-url-non-pooling"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-url-non-pooling":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects7 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects7) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects7) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26TypePostgresURL RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type = "postgres-url"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-url":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects6 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects6) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects6) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25TypeBlobReadWriteToken RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type = "blob-read-write-token"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "blob-read-write-token":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects5 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects5) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects5) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24TypeRedisRestAPIReadOnlyToken RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type = "redis-rest-api-read-only-token"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-rest-api-read-only-token":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects4 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects4) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects4) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23TypeRedisRestAPIToken RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type = "redis-rest-api-token"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-rest-api-token":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects3 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects3) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects3) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22TypeRedisRestAPIURL RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type = "redis-rest-api-url"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-rest-api-url":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects2 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects2) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects2) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2TypeRedisURL RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type = "redis-url"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-url":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type: %v", v)
	}
}

type RemoveProjectEnvContentHintProjects1 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type `json:"type"`
	StoreID string                                                                         `json:"storeId"`
}

func (o *RemoveProjectEnvContentHintProjects1) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHintProjects1) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvResponseBodyProjectsContentHintType string

const (
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects1  RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_1"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects2  RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_2"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects3  RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_3"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects4  RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_4"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects5  RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_5"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects6  RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_6"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects7  RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_7"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects8  RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_8"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects9  RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_9"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects10 RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_10"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects11 RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_11"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects12 RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_12"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects13 RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_13"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects14 RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_14"
	RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects15 RemoveProjectEnvResponseBodyProjectsContentHintType = "removeProjectEnv_contentHint_projects_15"
)

type RemoveProjectEnvResponseBodyProjectsContentHint struct {
	RemoveProjectEnvContentHintProjects1  *RemoveProjectEnvContentHintProjects1
	RemoveProjectEnvContentHintProjects2  *RemoveProjectEnvContentHintProjects2
	RemoveProjectEnvContentHintProjects3  *RemoveProjectEnvContentHintProjects3
	RemoveProjectEnvContentHintProjects4  *RemoveProjectEnvContentHintProjects4
	RemoveProjectEnvContentHintProjects5  *RemoveProjectEnvContentHintProjects5
	RemoveProjectEnvContentHintProjects6  *RemoveProjectEnvContentHintProjects6
	RemoveProjectEnvContentHintProjects7  *RemoveProjectEnvContentHintProjects7
	RemoveProjectEnvContentHintProjects8  *RemoveProjectEnvContentHintProjects8
	RemoveProjectEnvContentHintProjects9  *RemoveProjectEnvContentHintProjects9
	RemoveProjectEnvContentHintProjects10 *RemoveProjectEnvContentHintProjects10
	RemoveProjectEnvContentHintProjects11 *RemoveProjectEnvContentHintProjects11
	RemoveProjectEnvContentHintProjects12 *RemoveProjectEnvContentHintProjects12
	RemoveProjectEnvContentHintProjects13 *RemoveProjectEnvContentHintProjects13
	RemoveProjectEnvContentHintProjects14 *RemoveProjectEnvContentHintProjects14
	RemoveProjectEnvContentHintProjects15 *RemoveProjectEnvContentHintProjects15

	Type RemoveProjectEnvResponseBodyProjectsContentHintType
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects1(removeProjectEnvContentHintProjects1 RemoveProjectEnvContentHintProjects1) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects1

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects1: &removeProjectEnvContentHintProjects1,
		Type:                                 typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects2(removeProjectEnvContentHintProjects2 RemoveProjectEnvContentHintProjects2) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects2

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects2: &removeProjectEnvContentHintProjects2,
		Type:                                 typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects3(removeProjectEnvContentHintProjects3 RemoveProjectEnvContentHintProjects3) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects3

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects3: &removeProjectEnvContentHintProjects3,
		Type:                                 typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects4(removeProjectEnvContentHintProjects4 RemoveProjectEnvContentHintProjects4) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects4

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects4: &removeProjectEnvContentHintProjects4,
		Type:                                 typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects5(removeProjectEnvContentHintProjects5 RemoveProjectEnvContentHintProjects5) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects5

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects5: &removeProjectEnvContentHintProjects5,
		Type:                                 typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects6(removeProjectEnvContentHintProjects6 RemoveProjectEnvContentHintProjects6) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects6

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects6: &removeProjectEnvContentHintProjects6,
		Type:                                 typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects7(removeProjectEnvContentHintProjects7 RemoveProjectEnvContentHintProjects7) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects7

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects7: &removeProjectEnvContentHintProjects7,
		Type:                                 typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects8(removeProjectEnvContentHintProjects8 RemoveProjectEnvContentHintProjects8) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects8

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects8: &removeProjectEnvContentHintProjects8,
		Type:                                 typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects9(removeProjectEnvContentHintProjects9 RemoveProjectEnvContentHintProjects9) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects9

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects9: &removeProjectEnvContentHintProjects9,
		Type:                                 typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects10(removeProjectEnvContentHintProjects10 RemoveProjectEnvContentHintProjects10) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects10

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects10: &removeProjectEnvContentHintProjects10,
		Type:                                  typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects11(removeProjectEnvContentHintProjects11 RemoveProjectEnvContentHintProjects11) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects11

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects11: &removeProjectEnvContentHintProjects11,
		Type:                                  typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects12(removeProjectEnvContentHintProjects12 RemoveProjectEnvContentHintProjects12) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects12

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects12: &removeProjectEnvContentHintProjects12,
		Type:                                  typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects13(removeProjectEnvContentHintProjects13 RemoveProjectEnvContentHintProjects13) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects13

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects13: &removeProjectEnvContentHintProjects13,
		Type:                                  typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects14(removeProjectEnvContentHintProjects14 RemoveProjectEnvContentHintProjects14) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects14

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects14: &removeProjectEnvContentHintProjects14,
		Type:                                  typ,
	}
}

func CreateRemoveProjectEnvResponseBodyProjectsContentHintRemoveProjectEnvContentHintProjects15(removeProjectEnvContentHintProjects15 RemoveProjectEnvContentHintProjects15) RemoveProjectEnvResponseBodyProjectsContentHint {
	typ := RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects15

	return RemoveProjectEnvResponseBodyProjectsContentHint{
		RemoveProjectEnvContentHintProjects15: &removeProjectEnvContentHintProjects15,
		Type:                                  typ,
	}
}

func (u *RemoveProjectEnvResponseBodyProjectsContentHint) UnmarshalJSON(data []byte) error {

	var removeProjectEnvContentHintProjects7 RemoveProjectEnvContentHintProjects7 = RemoveProjectEnvContentHintProjects7{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects7, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects7 = &removeProjectEnvContentHintProjects7
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects7
		return nil
	}

	var removeProjectEnvContentHintProjects11 RemoveProjectEnvContentHintProjects11 = RemoveProjectEnvContentHintProjects11{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects11, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects11 = &removeProjectEnvContentHintProjects11
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects11
		return nil
	}

	var removeProjectEnvContentHintProjects3 RemoveProjectEnvContentHintProjects3 = RemoveProjectEnvContentHintProjects3{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects3, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects3 = &removeProjectEnvContentHintProjects3
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects3
		return nil
	}

	var removeProjectEnvContentHintProjects4 RemoveProjectEnvContentHintProjects4 = RemoveProjectEnvContentHintProjects4{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects4, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects4 = &removeProjectEnvContentHintProjects4
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects4
		return nil
	}

	var removeProjectEnvContentHintProjects5 RemoveProjectEnvContentHintProjects5 = RemoveProjectEnvContentHintProjects5{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects5, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects5 = &removeProjectEnvContentHintProjects5
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects5
		return nil
	}

	var removeProjectEnvContentHintProjects6 RemoveProjectEnvContentHintProjects6 = RemoveProjectEnvContentHintProjects6{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects6, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects6 = &removeProjectEnvContentHintProjects6
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects6
		return nil
	}

	var removeProjectEnvContentHintProjects2 RemoveProjectEnvContentHintProjects2 = RemoveProjectEnvContentHintProjects2{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects2, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects2 = &removeProjectEnvContentHintProjects2
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects2
		return nil
	}

	var removeProjectEnvContentHintProjects9 RemoveProjectEnvContentHintProjects9 = RemoveProjectEnvContentHintProjects9{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects9, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects9 = &removeProjectEnvContentHintProjects9
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects9
		return nil
	}

	var removeProjectEnvContentHintProjects1 RemoveProjectEnvContentHintProjects1 = RemoveProjectEnvContentHintProjects1{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects1, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects1 = &removeProjectEnvContentHintProjects1
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects1
		return nil
	}

	var removeProjectEnvContentHintProjects10 RemoveProjectEnvContentHintProjects10 = RemoveProjectEnvContentHintProjects10{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects10, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects10 = &removeProjectEnvContentHintProjects10
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects10
		return nil
	}

	var removeProjectEnvContentHintProjects8 RemoveProjectEnvContentHintProjects8 = RemoveProjectEnvContentHintProjects8{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects8, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects8 = &removeProjectEnvContentHintProjects8
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects8
		return nil
	}

	var removeProjectEnvContentHintProjects12 RemoveProjectEnvContentHintProjects12 = RemoveProjectEnvContentHintProjects12{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects12, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects12 = &removeProjectEnvContentHintProjects12
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects12
		return nil
	}

	var removeProjectEnvContentHintProjects13 RemoveProjectEnvContentHintProjects13 = RemoveProjectEnvContentHintProjects13{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects13, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects13 = &removeProjectEnvContentHintProjects13
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects13
		return nil
	}

	var removeProjectEnvContentHintProjects15 RemoveProjectEnvContentHintProjects15 = RemoveProjectEnvContentHintProjects15{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects15, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects15 = &removeProjectEnvContentHintProjects15
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects15
		return nil
	}

	var removeProjectEnvContentHintProjects14 RemoveProjectEnvContentHintProjects14 = RemoveProjectEnvContentHintProjects14{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHintProjects14, "", true, true); err == nil {
		u.RemoveProjectEnvContentHintProjects14 = &removeProjectEnvContentHintProjects14
		u.Type = RemoveProjectEnvResponseBodyProjectsContentHintTypeRemoveProjectEnvContentHintProjects14
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RemoveProjectEnvResponseBodyProjectsContentHint", string(data))
}

func (u RemoveProjectEnvResponseBodyProjectsContentHint) MarshalJSON() ([]byte, error) {
	if u.RemoveProjectEnvContentHintProjects1 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects1, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects2 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects2, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects3 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects3, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects4 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects4, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects5 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects5, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects6 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects6, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects7 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects7, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects8 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects8, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects9 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects9, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects10 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects10, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects11 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects11, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects12 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects12, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects13 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects13, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects14 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects14, "", true)
	}

	if u.RemoveProjectEnvContentHintProjects15 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHintProjects15, "", true)
	}

	return nil, errors.New("could not marshal union type RemoveProjectEnvResponseBodyProjectsContentHint: all fields are null")
}

type RemoveProjectEnvResponseBodyProjectsResponse200Type string

const (
	RemoveProjectEnvResponseBodyProjectsResponse200TypeFlagsSecret RemoveProjectEnvResponseBodyProjectsResponse200Type = "flags-secret"
)

func (e RemoveProjectEnvResponseBodyProjectsResponse200Type) ToPointer() *RemoveProjectEnvResponseBodyProjectsResponse200Type {
	return &e
}
func (e *RemoveProjectEnvResponseBodyProjectsResponse200Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "flags-secret":
		*e = RemoveProjectEnvResponseBodyProjectsResponse200Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvResponseBodyProjectsResponse200Type: %v", v)
	}
}

// RemoveProjectEnvResponseBodyProjectsInternalContentHint - Similar to `contentHints`, but should not be exposed to the user.
type RemoveProjectEnvResponseBodyProjectsInternalContentHint struct {
	Type RemoveProjectEnvResponseBodyProjectsResponse200Type `json:"type"`
	// Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
	EncryptedValue string `json:"encryptedValue"`
}

func (o *RemoveProjectEnvResponseBodyProjectsInternalContentHint) GetType() RemoveProjectEnvResponseBodyProjectsResponse200Type {
	if o == nil {
		return RemoveProjectEnvResponseBodyProjectsResponse200Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvResponseBodyProjectsInternalContentHint) GetEncryptedValue() string {
	if o == nil {
		return ""
	}
	return o.EncryptedValue
}

type RemoveProjectEnvResponseBody2 struct {
	System *bool                                       `json:"system,omitempty"`
	Target *RemoveProjectEnvResponseBodyProjectsTarget `json:"target,omitempty"`
	Type   RemoveProjectEnvResponseBodyProjectsType    `json:"type"`
	// This is used to identiy variables that have been migrated from type secret to sensitive.
	SunsetSecretID    *string                                          `json:"sunsetSecretId,omitempty"`
	ID                *string                                          `json:"id,omitempty"`
	Key               string                                           `json:"key"`
	Value             string                                           `json:"value"`
	ConfigurationID   *string                                          `json:"configurationId,omitempty"`
	CreatedAt         *float64                                         `json:"createdAt,omitempty"`
	UpdatedAt         *float64                                         `json:"updatedAt,omitempty"`
	CreatedBy         *string                                          `json:"createdBy,omitempty"`
	UpdatedBy         *string                                          `json:"updatedBy,omitempty"`
	GitBranch         *string                                          `json:"gitBranch,omitempty"`
	EdgeConfigID      *string                                          `json:"edgeConfigId,omitempty"`
	EdgeConfigTokenID *string                                          `json:"edgeConfigTokenId,omitempty"`
	ContentHint       *RemoveProjectEnvResponseBodyProjectsContentHint `json:"contentHint,omitempty"`
	// Similar to `contentHints`, but should not be exposed to the user.
	InternalContentHint *RemoveProjectEnvResponseBodyProjectsInternalContentHint `json:"internalContentHint,omitempty"`
	// Whether `value` and `vsmValue` are decrypted.
	Decrypted            *bool    `json:"decrypted,omitempty"`
	Comment              *string  `json:"comment,omitempty"`
	CustomEnvironmentIds []string `json:"customEnvironmentIds,omitempty"`
	VsmValue             *string  `json:"vsmValue,omitempty"`
}

func (o *RemoveProjectEnvResponseBody2) GetSystem() *bool {
	if o == nil {
		return nil
	}
	return o.System
}

func (o *RemoveProjectEnvResponseBody2) GetTarget() *RemoveProjectEnvResponseBodyProjectsTarget {
	if o == nil {
		return nil
	}
	return o.Target
}

func (o *RemoveProjectEnvResponseBody2) GetType() RemoveProjectEnvResponseBodyProjectsType {
	if o == nil {
		return RemoveProjectEnvResponseBodyProjectsType("")
	}
	return o.Type
}

func (o *RemoveProjectEnvResponseBody2) GetSunsetSecretID() *string {
	if o == nil {
		return nil
	}
	return o.SunsetSecretID
}

func (o *RemoveProjectEnvResponseBody2) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RemoveProjectEnvResponseBody2) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *RemoveProjectEnvResponseBody2) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *RemoveProjectEnvResponseBody2) GetConfigurationID() *string {
	if o == nil {
		return nil
	}
	return o.ConfigurationID
}

func (o *RemoveProjectEnvResponseBody2) GetCreatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *RemoveProjectEnvResponseBody2) GetUpdatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *RemoveProjectEnvResponseBody2) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *RemoveProjectEnvResponseBody2) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *RemoveProjectEnvResponseBody2) GetGitBranch() *string {
	if o == nil {
		return nil
	}
	return o.GitBranch
}

func (o *RemoveProjectEnvResponseBody2) GetEdgeConfigID() *string {
	if o == nil {
		return nil
	}
	return o.EdgeConfigID
}

func (o *RemoveProjectEnvResponseBody2) GetEdgeConfigTokenID() *string {
	if o == nil {
		return nil
	}
	return o.EdgeConfigTokenID
}

func (o *RemoveProjectEnvResponseBody2) GetContentHint() *RemoveProjectEnvResponseBodyProjectsContentHint {
	if o == nil {
		return nil
	}
	return o.ContentHint
}

func (o *RemoveProjectEnvResponseBody2) GetInternalContentHint() *RemoveProjectEnvResponseBodyProjectsInternalContentHint {
	if o == nil {
		return nil
	}
	return o.InternalContentHint
}

func (o *RemoveProjectEnvResponseBody2) GetDecrypted() *bool {
	if o == nil {
		return nil
	}
	return o.Decrypted
}

func (o *RemoveProjectEnvResponseBody2) GetComment() *string {
	if o == nil {
		return nil
	}
	return o.Comment
}

func (o *RemoveProjectEnvResponseBody2) GetCustomEnvironmentIds() []string {
	if o == nil {
		return nil
	}
	return o.CustomEnvironmentIds
}

func (o *RemoveProjectEnvResponseBody2) GetVsmValue() *string {
	if o == nil {
		return nil
	}
	return o.VsmValue
}

type RemoveProjectEnvTarget2 string

const (
	RemoveProjectEnvTarget2Production  RemoveProjectEnvTarget2 = "production"
	RemoveProjectEnvTarget2Preview     RemoveProjectEnvTarget2 = "preview"
	RemoveProjectEnvTarget2Development RemoveProjectEnvTarget2 = "development"
)

func (e RemoveProjectEnvTarget2) ToPointer() *RemoveProjectEnvTarget2 {
	return &e
}
func (e *RemoveProjectEnvTarget2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "production":
		fallthrough
	case "preview":
		fallthrough
	case "development":
		*e = RemoveProjectEnvTarget2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvTarget2: %v", v)
	}
}

type RemoveProjectEnvTarget1 string

const (
	RemoveProjectEnvTarget1Production  RemoveProjectEnvTarget1 = "production"
	RemoveProjectEnvTarget1Preview     RemoveProjectEnvTarget1 = "preview"
	RemoveProjectEnvTarget1Development RemoveProjectEnvTarget1 = "development"
)

func (e RemoveProjectEnvTarget1) ToPointer() *RemoveProjectEnvTarget1 {
	return &e
}
func (e *RemoveProjectEnvTarget1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "production":
		fallthrough
	case "preview":
		fallthrough
	case "development":
		*e = RemoveProjectEnvTarget1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvTarget1: %v", v)
	}
}

type RemoveProjectEnvResponseBodyTargetType string

const (
	RemoveProjectEnvResponseBodyTargetTypeArrayOfRemoveProjectEnvTarget1 RemoveProjectEnvResponseBodyTargetType = "arrayOfRemoveProjectEnvTarget1"
	RemoveProjectEnvResponseBodyTargetTypeRemoveProjectEnvTarget2        RemoveProjectEnvResponseBodyTargetType = "removeProjectEnv_target_2"
)

type RemoveProjectEnvResponseBodyTarget struct {
	ArrayOfRemoveProjectEnvTarget1 []RemoveProjectEnvTarget1
	RemoveProjectEnvTarget2        *RemoveProjectEnvTarget2

	Type RemoveProjectEnvResponseBodyTargetType
}

func CreateRemoveProjectEnvResponseBodyTargetArrayOfRemoveProjectEnvTarget1(arrayOfRemoveProjectEnvTarget1 []RemoveProjectEnvTarget1) RemoveProjectEnvResponseBodyTarget {
	typ := RemoveProjectEnvResponseBodyTargetTypeArrayOfRemoveProjectEnvTarget1

	return RemoveProjectEnvResponseBodyTarget{
		ArrayOfRemoveProjectEnvTarget1: arrayOfRemoveProjectEnvTarget1,
		Type:                           typ,
	}
}

func CreateRemoveProjectEnvResponseBodyTargetRemoveProjectEnvTarget2(removeProjectEnvTarget2 RemoveProjectEnvTarget2) RemoveProjectEnvResponseBodyTarget {
	typ := RemoveProjectEnvResponseBodyTargetTypeRemoveProjectEnvTarget2

	return RemoveProjectEnvResponseBodyTarget{
		RemoveProjectEnvTarget2: &removeProjectEnvTarget2,
		Type:                    typ,
	}
}

func (u *RemoveProjectEnvResponseBodyTarget) UnmarshalJSON(data []byte) error {

	var arrayOfRemoveProjectEnvTarget1 []RemoveProjectEnvTarget1 = []RemoveProjectEnvTarget1{}
	if err := utils.UnmarshalJSON(data, &arrayOfRemoveProjectEnvTarget1, "", true, true); err == nil {
		u.ArrayOfRemoveProjectEnvTarget1 = arrayOfRemoveProjectEnvTarget1
		u.Type = RemoveProjectEnvResponseBodyTargetTypeArrayOfRemoveProjectEnvTarget1
		return nil
	}

	var removeProjectEnvTarget2 RemoveProjectEnvTarget2 = RemoveProjectEnvTarget2("")
	if err := utils.UnmarshalJSON(data, &removeProjectEnvTarget2, "", true, true); err == nil {
		u.RemoveProjectEnvTarget2 = &removeProjectEnvTarget2
		u.Type = RemoveProjectEnvResponseBodyTargetTypeRemoveProjectEnvTarget2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RemoveProjectEnvResponseBodyTarget", string(data))
}

func (u RemoveProjectEnvResponseBodyTarget) MarshalJSON() ([]byte, error) {
	if u.ArrayOfRemoveProjectEnvTarget1 != nil {
		return utils.MarshalJSON(u.ArrayOfRemoveProjectEnvTarget1, "", true)
	}

	if u.RemoveProjectEnvTarget2 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvTarget2, "", true)
	}

	return nil, errors.New("could not marshal union type RemoveProjectEnvResponseBodyTarget: all fields are null")
}

type RemoveProjectEnvResponseBodyType string

const (
	RemoveProjectEnvResponseBodyTypeSystem    RemoveProjectEnvResponseBodyType = "system"
	RemoveProjectEnvResponseBodyTypeEncrypted RemoveProjectEnvResponseBodyType = "encrypted"
	RemoveProjectEnvResponseBodyTypePlain     RemoveProjectEnvResponseBodyType = "plain"
	RemoveProjectEnvResponseBodyTypeSensitive RemoveProjectEnvResponseBodyType = "sensitive"
	RemoveProjectEnvResponseBodyTypeSecret    RemoveProjectEnvResponseBodyType = "secret"
)

func (e RemoveProjectEnvResponseBodyType) ToPointer() *RemoveProjectEnvResponseBodyType {
	return &e
}
func (e *RemoveProjectEnvResponseBodyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "system":
		fallthrough
	case "encrypted":
		fallthrough
	case "plain":
		fallthrough
	case "sensitive":
		fallthrough
	case "secret":
		*e = RemoveProjectEnvResponseBodyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvResponseBodyType: %v", v)
	}
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115TypeFlagsConnectionString RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type = "flags-connection-string"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "flags-connection-string":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type: %v", v)
	}
}

type RemoveProjectEnvContentHint15 struct {
	Type      RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type `json:"type"`
	ProjectID string                                                                           `json:"projectId"`
}

func (o *RemoveProjectEnvContentHint15) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody115Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint15) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114TypeIntegrationStoreSecret RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type = "integration-store-secret"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "integration-store-secret":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type: %v", v)
	}
}

type RemoveProjectEnvContentHint14 struct {
	Type                       RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type `json:"type"`
	StoreID                    string                                                                           `json:"storeId"`
	IntegrationID              string                                                                           `json:"integrationId"`
	IntegrationProductID       string                                                                           `json:"integrationProductId"`
	IntegrationConfigurationID string                                                                           `json:"integrationConfigurationId"`
}

func (o *RemoveProjectEnvContentHint14) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint14) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

func (o *RemoveProjectEnvContentHint14) GetIntegrationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationID
}

func (o *RemoveProjectEnvContentHint14) GetIntegrationProductID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationProductID
}

func (o *RemoveProjectEnvContentHint14) GetIntegrationConfigurationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationConfigurationID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113TypePostgresURLNoSsl RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type = "postgres-url-no-ssl"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-url-no-ssl":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type: %v", v)
	}
}

type RemoveProjectEnvContentHint13 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint13) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint13) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112TypePostgresDatabase RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type = "postgres-database"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-database":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type: %v", v)
	}
}

type RemoveProjectEnvContentHint12 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint12) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint12) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111TypePostgresPassword RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type = "postgres-password"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-password":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type: %v", v)
	}
}

type RemoveProjectEnvContentHint11 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint11) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint11) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110TypePostgresHost RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type = "postgres-host"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-host":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type: %v", v)
	}
}

type RemoveProjectEnvContentHint10 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type `json:"type"`
	StoreID string                                                                           `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint10) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint10) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19TypePostgresUser RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type = "postgres-user"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-user":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type: %v", v)
	}
}

type RemoveProjectEnvContentHint9 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint9) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint9) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18TypePostgresPrismaURL RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type = "postgres-prisma-url"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-prisma-url":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type: %v", v)
	}
}

type RemoveProjectEnvContentHint8 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type `json:"type"`
	StoreID string                                                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint8) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint8) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1TypePostgresURLNonPooling RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type = "postgres-url-non-pooling"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-url-non-pooling":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type: %v", v)
	}
}

type RemoveProjectEnvContentHint7 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type `json:"type"`
	StoreID string                                                                         `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint7) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint7) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyTypePostgresURL RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType = "postgres-url"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "postgres-url":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType: %v", v)
	}
}

type RemoveProjectEnvContentHint6 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType `json:"type"`
	StoreID string                                                                        `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint6) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint6) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType string

const (
	RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONTypeBlobReadWriteToken RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType = "blob-read-write-token"
)

func (e RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "blob-read-write-token":
		*e = RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType: %v", v)
	}
}

type RemoveProjectEnvContentHint5 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType `json:"type"`
	StoreID string                                                            `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint5) GetType() RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200ApplicationJSONType("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint5) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponse200Type string

const (
	RemoveProjectEnvContentHintProjectsResponse200TypeRedisRestAPIReadOnlyToken RemoveProjectEnvContentHintProjectsResponse200Type = "redis-rest-api-read-only-token"
)

func (e RemoveProjectEnvContentHintProjectsResponse200Type) ToPointer() *RemoveProjectEnvContentHintProjectsResponse200Type {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponse200Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-rest-api-read-only-token":
		*e = RemoveProjectEnvContentHintProjectsResponse200Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponse200Type: %v", v)
	}
}

type RemoveProjectEnvContentHint4 struct {
	Type    RemoveProjectEnvContentHintProjectsResponse200Type `json:"type"`
	StoreID string                                             `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint4) GetType() RemoveProjectEnvContentHintProjectsResponse200Type {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponse200Type("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint4) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsResponseType string

const (
	RemoveProjectEnvContentHintProjectsResponseTypeRedisRestAPIToken RemoveProjectEnvContentHintProjectsResponseType = "redis-rest-api-token"
)

func (e RemoveProjectEnvContentHintProjectsResponseType) ToPointer() *RemoveProjectEnvContentHintProjectsResponseType {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsResponseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-rest-api-token":
		*e = RemoveProjectEnvContentHintProjectsResponseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsResponseType: %v", v)
	}
}

type RemoveProjectEnvContentHint3 struct {
	Type    RemoveProjectEnvContentHintProjectsResponseType `json:"type"`
	StoreID string                                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint3) GetType() RemoveProjectEnvContentHintProjectsResponseType {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsResponseType("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint3) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintProjectsType string

const (
	RemoveProjectEnvContentHintProjectsTypeRedisRestAPIURL RemoveProjectEnvContentHintProjectsType = "redis-rest-api-url"
)

func (e RemoveProjectEnvContentHintProjectsType) ToPointer() *RemoveProjectEnvContentHintProjectsType {
	return &e
}
func (e *RemoveProjectEnvContentHintProjectsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-rest-api-url":
		*e = RemoveProjectEnvContentHintProjectsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintProjectsType: %v", v)
	}
}

type RemoveProjectEnvContentHint2 struct {
	Type    RemoveProjectEnvContentHintProjectsType `json:"type"`
	StoreID string                                  `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint2) GetType() RemoveProjectEnvContentHintProjectsType {
	if o == nil {
		return RemoveProjectEnvContentHintProjectsType("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint2) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvContentHintType string

const (
	RemoveProjectEnvContentHintTypeRedisURL RemoveProjectEnvContentHintType = "redis-url"
)

func (e RemoveProjectEnvContentHintType) ToPointer() *RemoveProjectEnvContentHintType {
	return &e
}
func (e *RemoveProjectEnvContentHintType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redis-url":
		*e = RemoveProjectEnvContentHintType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvContentHintType: %v", v)
	}
}

type RemoveProjectEnvContentHint1 struct {
	Type    RemoveProjectEnvContentHintType `json:"type"`
	StoreID string                          `json:"storeId"`
}

func (o *RemoveProjectEnvContentHint1) GetType() RemoveProjectEnvContentHintType {
	if o == nil {
		return RemoveProjectEnvContentHintType("")
	}
	return o.Type
}

func (o *RemoveProjectEnvContentHint1) GetStoreID() string {
	if o == nil {
		return ""
	}
	return o.StoreID
}

type RemoveProjectEnvResponseBodyContentHintType string

const (
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint1  RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_1"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint2  RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_2"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint3  RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_3"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint4  RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_4"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint5  RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_5"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint6  RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_6"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint7  RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_7"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint8  RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_8"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint9  RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_9"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint10 RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_10"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint11 RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_11"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint12 RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_12"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint13 RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_13"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint14 RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_14"
	RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint15 RemoveProjectEnvResponseBodyContentHintType = "removeProjectEnv_contentHint_15"
)

type RemoveProjectEnvResponseBodyContentHint struct {
	RemoveProjectEnvContentHint1  *RemoveProjectEnvContentHint1
	RemoveProjectEnvContentHint2  *RemoveProjectEnvContentHint2
	RemoveProjectEnvContentHint3  *RemoveProjectEnvContentHint3
	RemoveProjectEnvContentHint4  *RemoveProjectEnvContentHint4
	RemoveProjectEnvContentHint5  *RemoveProjectEnvContentHint5
	RemoveProjectEnvContentHint6  *RemoveProjectEnvContentHint6
	RemoveProjectEnvContentHint7  *RemoveProjectEnvContentHint7
	RemoveProjectEnvContentHint8  *RemoveProjectEnvContentHint8
	RemoveProjectEnvContentHint9  *RemoveProjectEnvContentHint9
	RemoveProjectEnvContentHint10 *RemoveProjectEnvContentHint10
	RemoveProjectEnvContentHint11 *RemoveProjectEnvContentHint11
	RemoveProjectEnvContentHint12 *RemoveProjectEnvContentHint12
	RemoveProjectEnvContentHint13 *RemoveProjectEnvContentHint13
	RemoveProjectEnvContentHint14 *RemoveProjectEnvContentHint14
	RemoveProjectEnvContentHint15 *RemoveProjectEnvContentHint15

	Type RemoveProjectEnvResponseBodyContentHintType
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint1(removeProjectEnvContentHint1 RemoveProjectEnvContentHint1) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint1

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint1: &removeProjectEnvContentHint1,
		Type:                         typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint2(removeProjectEnvContentHint2 RemoveProjectEnvContentHint2) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint2

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint2: &removeProjectEnvContentHint2,
		Type:                         typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint3(removeProjectEnvContentHint3 RemoveProjectEnvContentHint3) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint3

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint3: &removeProjectEnvContentHint3,
		Type:                         typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint4(removeProjectEnvContentHint4 RemoveProjectEnvContentHint4) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint4

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint4: &removeProjectEnvContentHint4,
		Type:                         typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint5(removeProjectEnvContentHint5 RemoveProjectEnvContentHint5) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint5

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint5: &removeProjectEnvContentHint5,
		Type:                         typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint6(removeProjectEnvContentHint6 RemoveProjectEnvContentHint6) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint6

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint6: &removeProjectEnvContentHint6,
		Type:                         typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint7(removeProjectEnvContentHint7 RemoveProjectEnvContentHint7) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint7

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint7: &removeProjectEnvContentHint7,
		Type:                         typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint8(removeProjectEnvContentHint8 RemoveProjectEnvContentHint8) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint8

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint8: &removeProjectEnvContentHint8,
		Type:                         typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint9(removeProjectEnvContentHint9 RemoveProjectEnvContentHint9) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint9

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint9: &removeProjectEnvContentHint9,
		Type:                         typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint10(removeProjectEnvContentHint10 RemoveProjectEnvContentHint10) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint10

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint10: &removeProjectEnvContentHint10,
		Type:                          typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint11(removeProjectEnvContentHint11 RemoveProjectEnvContentHint11) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint11

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint11: &removeProjectEnvContentHint11,
		Type:                          typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint12(removeProjectEnvContentHint12 RemoveProjectEnvContentHint12) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint12

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint12: &removeProjectEnvContentHint12,
		Type:                          typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint13(removeProjectEnvContentHint13 RemoveProjectEnvContentHint13) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint13

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint13: &removeProjectEnvContentHint13,
		Type:                          typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint14(removeProjectEnvContentHint14 RemoveProjectEnvContentHint14) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint14

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint14: &removeProjectEnvContentHint14,
		Type:                          typ,
	}
}

func CreateRemoveProjectEnvResponseBodyContentHintRemoveProjectEnvContentHint15(removeProjectEnvContentHint15 RemoveProjectEnvContentHint15) RemoveProjectEnvResponseBodyContentHint {
	typ := RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint15

	return RemoveProjectEnvResponseBodyContentHint{
		RemoveProjectEnvContentHint15: &removeProjectEnvContentHint15,
		Type:                          typ,
	}
}

func (u *RemoveProjectEnvResponseBodyContentHint) UnmarshalJSON(data []byte) error {

	var removeProjectEnvContentHint7 RemoveProjectEnvContentHint7 = RemoveProjectEnvContentHint7{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint7, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint7 = &removeProjectEnvContentHint7
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint7
		return nil
	}

	var removeProjectEnvContentHint11 RemoveProjectEnvContentHint11 = RemoveProjectEnvContentHint11{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint11, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint11 = &removeProjectEnvContentHint11
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint11
		return nil
	}

	var removeProjectEnvContentHint3 RemoveProjectEnvContentHint3 = RemoveProjectEnvContentHint3{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint3, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint3 = &removeProjectEnvContentHint3
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint3
		return nil
	}

	var removeProjectEnvContentHint4 RemoveProjectEnvContentHint4 = RemoveProjectEnvContentHint4{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint4, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint4 = &removeProjectEnvContentHint4
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint4
		return nil
	}

	var removeProjectEnvContentHint5 RemoveProjectEnvContentHint5 = RemoveProjectEnvContentHint5{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint5, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint5 = &removeProjectEnvContentHint5
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint5
		return nil
	}

	var removeProjectEnvContentHint6 RemoveProjectEnvContentHint6 = RemoveProjectEnvContentHint6{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint6, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint6 = &removeProjectEnvContentHint6
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint6
		return nil
	}

	var removeProjectEnvContentHint2 RemoveProjectEnvContentHint2 = RemoveProjectEnvContentHint2{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint2, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint2 = &removeProjectEnvContentHint2
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint2
		return nil
	}

	var removeProjectEnvContentHint9 RemoveProjectEnvContentHint9 = RemoveProjectEnvContentHint9{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint9, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint9 = &removeProjectEnvContentHint9
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint9
		return nil
	}

	var removeProjectEnvContentHint1 RemoveProjectEnvContentHint1 = RemoveProjectEnvContentHint1{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint1, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint1 = &removeProjectEnvContentHint1
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint1
		return nil
	}

	var removeProjectEnvContentHint10 RemoveProjectEnvContentHint10 = RemoveProjectEnvContentHint10{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint10, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint10 = &removeProjectEnvContentHint10
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint10
		return nil
	}

	var removeProjectEnvContentHint8 RemoveProjectEnvContentHint8 = RemoveProjectEnvContentHint8{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint8, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint8 = &removeProjectEnvContentHint8
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint8
		return nil
	}

	var removeProjectEnvContentHint12 RemoveProjectEnvContentHint12 = RemoveProjectEnvContentHint12{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint12, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint12 = &removeProjectEnvContentHint12
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint12
		return nil
	}

	var removeProjectEnvContentHint13 RemoveProjectEnvContentHint13 = RemoveProjectEnvContentHint13{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint13, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint13 = &removeProjectEnvContentHint13
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint13
		return nil
	}

	var removeProjectEnvContentHint15 RemoveProjectEnvContentHint15 = RemoveProjectEnvContentHint15{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint15, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint15 = &removeProjectEnvContentHint15
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint15
		return nil
	}

	var removeProjectEnvContentHint14 RemoveProjectEnvContentHint14 = RemoveProjectEnvContentHint14{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvContentHint14, "", true, true); err == nil {
		u.RemoveProjectEnvContentHint14 = &removeProjectEnvContentHint14
		u.Type = RemoveProjectEnvResponseBodyContentHintTypeRemoveProjectEnvContentHint14
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RemoveProjectEnvResponseBodyContentHint", string(data))
}

func (u RemoveProjectEnvResponseBodyContentHint) MarshalJSON() ([]byte, error) {
	if u.RemoveProjectEnvContentHint1 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint1, "", true)
	}

	if u.RemoveProjectEnvContentHint2 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint2, "", true)
	}

	if u.RemoveProjectEnvContentHint3 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint3, "", true)
	}

	if u.RemoveProjectEnvContentHint4 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint4, "", true)
	}

	if u.RemoveProjectEnvContentHint5 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint5, "", true)
	}

	if u.RemoveProjectEnvContentHint6 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint6, "", true)
	}

	if u.RemoveProjectEnvContentHint7 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint7, "", true)
	}

	if u.RemoveProjectEnvContentHint8 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint8, "", true)
	}

	if u.RemoveProjectEnvContentHint9 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint9, "", true)
	}

	if u.RemoveProjectEnvContentHint10 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint10, "", true)
	}

	if u.RemoveProjectEnvContentHint11 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint11, "", true)
	}

	if u.RemoveProjectEnvContentHint12 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint12, "", true)
	}

	if u.RemoveProjectEnvContentHint13 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint13, "", true)
	}

	if u.RemoveProjectEnvContentHint14 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint14, "", true)
	}

	if u.RemoveProjectEnvContentHint15 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvContentHint15, "", true)
	}

	return nil, errors.New("could not marshal union type RemoveProjectEnvResponseBodyContentHint: all fields are null")
}

type RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType string

const (
	RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONTypeFlagsSecret RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType = "flags-secret"
)

func (e RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType) ToPointer() *RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType {
	return &e
}
func (e *RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "flags-secret":
		*e = RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType: %v", v)
	}
}

// RemoveProjectEnvResponseBodyInternalContentHint - Similar to `contentHints`, but should not be exposed to the user.
type RemoveProjectEnvResponseBodyInternalContentHint struct {
	Type RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType `json:"type"`
	// Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
	EncryptedValue string `json:"encryptedValue"`
}

func (o *RemoveProjectEnvResponseBodyInternalContentHint) GetType() RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType {
	if o == nil {
		return RemoveProjectEnvResponseBodyProjectsResponse200ApplicationJSONType("")
	}
	return o.Type
}

func (o *RemoveProjectEnvResponseBodyInternalContentHint) GetEncryptedValue() string {
	if o == nil {
		return ""
	}
	return o.EncryptedValue
}

type RemoveProjectEnvResponseBody1 struct {
	Target *RemoveProjectEnvResponseBodyTarget `json:"target,omitempty"`
	Type   RemoveProjectEnvResponseBodyType    `json:"type"`
	// This is used to identiy variables that have been migrated from type secret to sensitive.
	SunsetSecretID    *string                                  `json:"sunsetSecretId,omitempty"`
	ID                *string                                  `json:"id,omitempty"`
	Key               string                                   `json:"key"`
	Value             string                                   `json:"value"`
	ConfigurationID   *string                                  `json:"configurationId,omitempty"`
	CreatedAt         *float64                                 `json:"createdAt,omitempty"`
	UpdatedAt         *float64                                 `json:"updatedAt,omitempty"`
	CreatedBy         *string                                  `json:"createdBy,omitempty"`
	UpdatedBy         *string                                  `json:"updatedBy,omitempty"`
	GitBranch         *string                                  `json:"gitBranch,omitempty"`
	EdgeConfigID      *string                                  `json:"edgeConfigId,omitempty"`
	EdgeConfigTokenID *string                                  `json:"edgeConfigTokenId,omitempty"`
	ContentHint       *RemoveProjectEnvResponseBodyContentHint `json:"contentHint,omitempty"`
	// Similar to `contentHints`, but should not be exposed to the user.
	InternalContentHint *RemoveProjectEnvResponseBodyInternalContentHint `json:"internalContentHint,omitempty"`
	// Whether `value` and `vsmValue` are decrypted.
	Decrypted            *bool    `json:"decrypted,omitempty"`
	Comment              *string  `json:"comment,omitempty"`
	CustomEnvironmentIds []string `json:"customEnvironmentIds,omitempty"`
	VsmValue             *string  `json:"vsmValue,omitempty"`
}

func (o *RemoveProjectEnvResponseBody1) GetTarget() *RemoveProjectEnvResponseBodyTarget {
	if o == nil {
		return nil
	}
	return o.Target
}

func (o *RemoveProjectEnvResponseBody1) GetType() RemoveProjectEnvResponseBodyType {
	if o == nil {
		return RemoveProjectEnvResponseBodyType("")
	}
	return o.Type
}

func (o *RemoveProjectEnvResponseBody1) GetSunsetSecretID() *string {
	if o == nil {
		return nil
	}
	return o.SunsetSecretID
}

func (o *RemoveProjectEnvResponseBody1) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RemoveProjectEnvResponseBody1) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *RemoveProjectEnvResponseBody1) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *RemoveProjectEnvResponseBody1) GetConfigurationID() *string {
	if o == nil {
		return nil
	}
	return o.ConfigurationID
}

func (o *RemoveProjectEnvResponseBody1) GetCreatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *RemoveProjectEnvResponseBody1) GetUpdatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *RemoveProjectEnvResponseBody1) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *RemoveProjectEnvResponseBody1) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *RemoveProjectEnvResponseBody1) GetGitBranch() *string {
	if o == nil {
		return nil
	}
	return o.GitBranch
}

func (o *RemoveProjectEnvResponseBody1) GetEdgeConfigID() *string {
	if o == nil {
		return nil
	}
	return o.EdgeConfigID
}

func (o *RemoveProjectEnvResponseBody1) GetEdgeConfigTokenID() *string {
	if o == nil {
		return nil
	}
	return o.EdgeConfigTokenID
}

func (o *RemoveProjectEnvResponseBody1) GetContentHint() *RemoveProjectEnvResponseBodyContentHint {
	if o == nil {
		return nil
	}
	return o.ContentHint
}

func (o *RemoveProjectEnvResponseBody1) GetInternalContentHint() *RemoveProjectEnvResponseBodyInternalContentHint {
	if o == nil {
		return nil
	}
	return o.InternalContentHint
}

func (o *RemoveProjectEnvResponseBody1) GetDecrypted() *bool {
	if o == nil {
		return nil
	}
	return o.Decrypted
}

func (o *RemoveProjectEnvResponseBody1) GetComment() *string {
	if o == nil {
		return nil
	}
	return o.Comment
}

func (o *RemoveProjectEnvResponseBody1) GetCustomEnvironmentIds() []string {
	if o == nil {
		return nil
	}
	return o.CustomEnvironmentIds
}

func (o *RemoveProjectEnvResponseBody1) GetVsmValue() *string {
	if o == nil {
		return nil
	}
	return o.VsmValue
}

type RemoveProjectEnvResponseBodyUnionType string

const (
	RemoveProjectEnvResponseBodyUnionTypeArrayOfRemoveProjectEnvResponseBody1 RemoveProjectEnvResponseBodyUnionType = "arrayOfRemoveProjectEnvResponseBody1"
	RemoveProjectEnvResponseBodyUnionTypeRemoveProjectEnvResponseBody2        RemoveProjectEnvResponseBodyUnionType = "removeProjectEnv_responseBody_2"
	RemoveProjectEnvResponseBodyUnionTypeRemoveProjectEnvResponseBody3        RemoveProjectEnvResponseBodyUnionType = "removeProjectEnv_responseBody_3"
)

// RemoveProjectEnvResponseBody - The environment variable was successfully removed
type RemoveProjectEnvResponseBody struct {
	ArrayOfRemoveProjectEnvResponseBody1 []RemoveProjectEnvResponseBody1
	RemoveProjectEnvResponseBody2        *RemoveProjectEnvResponseBody2
	RemoveProjectEnvResponseBody3        *RemoveProjectEnvResponseBody3

	Type RemoveProjectEnvResponseBodyUnionType
}

func CreateRemoveProjectEnvResponseBodyArrayOfRemoveProjectEnvResponseBody1(arrayOfRemoveProjectEnvResponseBody1 []RemoveProjectEnvResponseBody1) RemoveProjectEnvResponseBody {
	typ := RemoveProjectEnvResponseBodyUnionTypeArrayOfRemoveProjectEnvResponseBody1

	return RemoveProjectEnvResponseBody{
		ArrayOfRemoveProjectEnvResponseBody1: arrayOfRemoveProjectEnvResponseBody1,
		Type:                                 typ,
	}
}

func CreateRemoveProjectEnvResponseBodyRemoveProjectEnvResponseBody2(removeProjectEnvResponseBody2 RemoveProjectEnvResponseBody2) RemoveProjectEnvResponseBody {
	typ := RemoveProjectEnvResponseBodyUnionTypeRemoveProjectEnvResponseBody2

	return RemoveProjectEnvResponseBody{
		RemoveProjectEnvResponseBody2: &removeProjectEnvResponseBody2,
		Type:                          typ,
	}
}

func CreateRemoveProjectEnvResponseBodyRemoveProjectEnvResponseBody3(removeProjectEnvResponseBody3 RemoveProjectEnvResponseBody3) RemoveProjectEnvResponseBody {
	typ := RemoveProjectEnvResponseBodyUnionTypeRemoveProjectEnvResponseBody3

	return RemoveProjectEnvResponseBody{
		RemoveProjectEnvResponseBody3: &removeProjectEnvResponseBody3,
		Type:                          typ,
	}
}

func (u *RemoveProjectEnvResponseBody) UnmarshalJSON(data []byte) error {

	var removeProjectEnvResponseBody3 RemoveProjectEnvResponseBody3 = RemoveProjectEnvResponseBody3{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvResponseBody3, "", true, true); err == nil {
		u.RemoveProjectEnvResponseBody3 = &removeProjectEnvResponseBody3
		u.Type = RemoveProjectEnvResponseBodyUnionTypeRemoveProjectEnvResponseBody3
		return nil
	}

	var removeProjectEnvResponseBody2 RemoveProjectEnvResponseBody2 = RemoveProjectEnvResponseBody2{}
	if err := utils.UnmarshalJSON(data, &removeProjectEnvResponseBody2, "", true, true); err == nil {
		u.RemoveProjectEnvResponseBody2 = &removeProjectEnvResponseBody2
		u.Type = RemoveProjectEnvResponseBodyUnionTypeRemoveProjectEnvResponseBody2
		return nil
	}

	var arrayOfRemoveProjectEnvResponseBody1 []RemoveProjectEnvResponseBody1 = []RemoveProjectEnvResponseBody1{}
	if err := utils.UnmarshalJSON(data, &arrayOfRemoveProjectEnvResponseBody1, "", true, true); err == nil {
		u.ArrayOfRemoveProjectEnvResponseBody1 = arrayOfRemoveProjectEnvResponseBody1
		u.Type = RemoveProjectEnvResponseBodyUnionTypeArrayOfRemoveProjectEnvResponseBody1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RemoveProjectEnvResponseBody", string(data))
}

func (u RemoveProjectEnvResponseBody) MarshalJSON() ([]byte, error) {
	if u.ArrayOfRemoveProjectEnvResponseBody1 != nil {
		return utils.MarshalJSON(u.ArrayOfRemoveProjectEnvResponseBody1, "", true)
	}

	if u.RemoveProjectEnvResponseBody2 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvResponseBody2, "", true)
	}

	if u.RemoveProjectEnvResponseBody3 != nil {
		return utils.MarshalJSON(u.RemoveProjectEnvResponseBody3, "", true)
	}

	return nil, errors.New("could not marshal union type RemoveProjectEnvResponseBody: all fields are null")
}

type RemoveProjectEnvResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The environment variable was successfully removed
	OneOf *RemoveProjectEnvResponseBody
}

func (o *RemoveProjectEnvResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RemoveProjectEnvResponse) GetOneOf() *RemoveProjectEnvResponseBody {
	if o == nil {
		return nil
	}
	return o.OneOf
}
