// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

type Category string

const (
	CategoryExperiment Category = "experiment"
	CategoryFlag       Category = "flag"
)

func (e Category) ToPointer() *Category {
	return &e
}
func (e *Category) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "experiment":
		fallthrough
	case "flag":
		*e = Category(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Category: %v", v)
	}
}

type PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems struct {
	ID          string    `json:"id"`
	Slug        string    `json:"slug"`
	Origin      string    `json:"origin"`
	Category    *Category `json:"category,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Description *string   `json:"description,omitempty"`
	IsArchived  *bool     `json:"isArchived,omitempty"`
	CreatedAt   *float64  `json:"createdAt,omitempty"`
	UpdatedAt   *float64  `json:"updatedAt,omitempty"`
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems) GetOrigin() string {
	if o == nil {
		return ""
	}
	return o.Origin
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems) GetCategory() *Category {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems) GetIsArchived() *bool {
	if o == nil {
		return nil
	}
	return o.IsArchived
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems) GetCreatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems) GetUpdatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

type PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsRequestBody struct {
	Items []PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems `json:"items"`
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsRequestBody) GetItems() []PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems {
	if o == nil {
		return []PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsItems{}
	}
	return o.Items
}

type PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsRequest struct {
	IntegrationConfigurationID string                                                                                           `pathParam:"style=simple,explode=false,name=integrationConfigurationId"`
	ResourceID                 string                                                                                           `pathParam:"style=simple,explode=false,name=resourceId"`
	RequestBody                *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsRequestBody `request:"mediaType=application/json"`
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsRequest) GetIntegrationConfigurationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationConfigurationID
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsRequest) GetResourceID() string {
	if o == nil {
		return ""
	}
	return o.ResourceID
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsRequest) GetRequestBody() *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *PostV1InstallationsIntegrationConfigurationIDResourcesResourceIDExperimentationItemsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
