// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

// CreateAccessGroupRole - The project role that will be added to this Access Group. \"null\" will remove this project level role.
type CreateAccessGroupRole string

const (
	CreateAccessGroupRoleAdmin            CreateAccessGroupRole = "ADMIN"
	CreateAccessGroupRoleProjectViewer    CreateAccessGroupRole = "PROJECT_VIEWER"
	CreateAccessGroupRoleProjectDeveloper CreateAccessGroupRole = "PROJECT_DEVELOPER"
)

func (e CreateAccessGroupRole) ToPointer() *CreateAccessGroupRole {
	return &e
}
func (e *CreateAccessGroupRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ADMIN":
		fallthrough
	case "PROJECT_VIEWER":
		fallthrough
	case "PROJECT_DEVELOPER":
		*e = CreateAccessGroupRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAccessGroupRole: %v", v)
	}
}

type CreateAccessGroupProjects struct {
	// The ID of the project.
	ProjectID string `json:"projectId"`
	// The project role that will be added to this Access Group. \"null\" will remove this project level role.
	Role *CreateAccessGroupRole `json:"role"`
}

func (o *CreateAccessGroupProjects) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *CreateAccessGroupProjects) GetRole() *CreateAccessGroupRole {
	if o == nil {
		return nil
	}
	return o.Role
}

type CreateAccessGroupRequestBody struct {
	// The name of the access group
	Name     string                      `json:"name"`
	Projects []CreateAccessGroupProjects `json:"projects,omitempty"`
	// List of members to add to the access group.
	MembersToAdd []string `json:"membersToAdd,omitempty"`
}

func (o *CreateAccessGroupRequestBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateAccessGroupRequestBody) GetProjects() []CreateAccessGroupProjects {
	if o == nil {
		return nil
	}
	return o.Projects
}

func (o *CreateAccessGroupRequestBody) GetMembersToAdd() []string {
	if o == nil {
		return nil
	}
	return o.MembersToAdd
}

type CreateAccessGroupRequest struct {
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug        *string                      `queryParam:"style=form,explode=true,name=slug"`
	RequestBody CreateAccessGroupRequestBody `request:"mediaType=application/json"`
}

func (o *CreateAccessGroupRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *CreateAccessGroupRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *CreateAccessGroupRequest) GetRequestBody() CreateAccessGroupRequestBody {
	if o == nil {
		return CreateAccessGroupRequestBody{}
	}
	return o.RequestBody
}

type CreateAccessGroupResponseBody struct {
	MembersCount  float64 `json:"membersCount"`
	ProjectsCount float64 `json:"projectsCount"`
	// The name of this access group.
	Name string `json:"name"`
	// Timestamp in milliseconds when the access group was created.
	CreatedAt string `json:"createdAt"`
	// ID of the team that this access group belongs to.
	TeamID string `json:"teamId"`
	// Timestamp in milliseconds when the access group was last updated.
	UpdatedAt string `json:"updatedAt"`
	// ID of the access group.
	AccessGroupID string `json:"accessGroupId"`
	// Roles that the team has in the access group.
	TeamRoles []string `json:"teamRoles,omitempty"`
	// Permissions that the team has in the access group.
	TeamPermissions []string `json:"teamPermissions,omitempty"`
}

func (o *CreateAccessGroupResponseBody) GetMembersCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.MembersCount
}

func (o *CreateAccessGroupResponseBody) GetProjectsCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.ProjectsCount
}

func (o *CreateAccessGroupResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateAccessGroupResponseBody) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *CreateAccessGroupResponseBody) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *CreateAccessGroupResponseBody) GetUpdatedAt() string {
	if o == nil {
		return ""
	}
	return o.UpdatedAt
}

func (o *CreateAccessGroupResponseBody) GetAccessGroupID() string {
	if o == nil {
		return ""
	}
	return o.AccessGroupID
}

func (o *CreateAccessGroupResponseBody) GetTeamRoles() []string {
	if o == nil {
		return nil
	}
	return o.TeamRoles
}

func (o *CreateAccessGroupResponseBody) GetTeamPermissions() []string {
	if o == nil {
		return nil
	}
	return o.TeamPermissions
}

type CreateAccessGroupResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *CreateAccessGroupResponseBody
}

func (o *CreateAccessGroupResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateAccessGroupResponse) GetObject() *CreateAccessGroupResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
