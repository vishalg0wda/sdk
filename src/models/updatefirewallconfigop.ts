/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export const UpdateFirewallConfigRequestBodySecurityRequest12Action = {
  Log: "log",
  Challenge: "challenge",
  Deny: "deny",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest12Action = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityRequest12Action
>;

export type UpdateFirewallConfigRequestBodySecurityRequest12Value = {
  active: boolean;
  action?: UpdateFirewallConfigRequestBodySecurityRequest12Action | undefined;
};

/**
 * Update a managed rule group
 */
export type Twelve = {
  action?: "managedRuleGroup.update" | undefined;
  id: string;
  value: { [k: string]: UpdateFirewallConfigRequestBodySecurityRequest12Value };
};

export const UpdateFirewallConfigRequestBodySecurityRequest11Action = {
  ManagedRulesUpdate: "managedRules.update",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest11Action = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityRequest11Action
>;

export const UpdateFirewallConfigRequestBodySecurityRequest11ValueAction = {
  Log: "log",
  Challenge: "challenge",
  Deny: "deny",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest11ValueAction =
  ClosedEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest11ValueAction
  >;

export type UpdateFirewallConfigRequestBodySecurityRequest11Value = {
  action?:
    | UpdateFirewallConfigRequestBodySecurityRequest11ValueAction
    | undefined;
  active: boolean;
};

/**
 * Update a managed ruleset
 */
export type Eleven = {
  action: UpdateFirewallConfigRequestBodySecurityRequest11Action;
  id: string;
  value: UpdateFirewallConfigRequestBodySecurityRequest11Value;
};

export const UpdateFirewallConfigRequestBodySecurityRequest10Action = {
  IpRemove: "ip.remove",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest10Action = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityRequest10Action
>;

/**
 * Remove an IPBlocking rule
 */
export type RequestBody10 = {
  action: UpdateFirewallConfigRequestBodySecurityRequest10Action;
  id: string;
  value?: any | null | undefined;
};

export const UpdateFirewallConfigRequestBodySecurityRequest9Action = {
  IpUpdate: "ip.update",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest9Action = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityRequest9Action
>;

export const UpdateFirewallConfigRequestBodySecurityRequest9ValueAction = {
  Deny: "deny",
  Challenge: "challenge",
  Log: "log",
  Bypass: "bypass",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest9ValueAction =
  ClosedEnum<typeof UpdateFirewallConfigRequestBodySecurityRequest9ValueAction>;

export type UpdateFirewallConfigRequestBodySecurityRequestValue = {
  hostname: string;
  ip: string;
  notes?: string | undefined;
  action: UpdateFirewallConfigRequestBodySecurityRequest9ValueAction;
};

/**
 * Update an IP Blocking rule
 */
export type RequestBody9 = {
  action: UpdateFirewallConfigRequestBodySecurityRequest9Action;
  id: string;
  value: UpdateFirewallConfigRequestBodySecurityRequestValue;
};

export const UpdateFirewallConfigRequestBodySecurityRequest8Action = {
  IpInsert: "ip.insert",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest8Action = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityRequest8Action
>;

export const UpdateFirewallConfigRequestBodySecurityRequest8ValueAction = {
  Deny: "deny",
  Challenge: "challenge",
  Log: "log",
  Bypass: "bypass",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest8ValueAction =
  ClosedEnum<typeof UpdateFirewallConfigRequestBodySecurityRequest8ValueAction>;

export type UpdateFirewallConfigRequestBodySecurityValue = {
  hostname: string;
  ip: string;
  notes?: string | undefined;
  action: UpdateFirewallConfigRequestBodySecurityRequest8ValueAction;
};

/**
 * Add an IP Blocking rule
 */
export type RequestBody8 = {
  action: UpdateFirewallConfigRequestBodySecurityRequest8Action;
  id?: any | null | undefined;
  value: UpdateFirewallConfigRequestBodySecurityValue;
};

export const UpdateFirewallConfigRequestBodySecurityRequest7Action = {
  CrsDisable: "crs.disable",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest7Action = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityRequest7Action
>;

/**
 * Disable a managed rule
 */
export type RequestBody7 = {
  action: UpdateFirewallConfigRequestBodySecurityRequest7Action;
  id?: any | null | undefined;
  value?: any | null | undefined;
};

export const UpdateFirewallConfigRequestBodySecurityRequest6Action = {
  CrsUpdate: "crs.update",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest6Action = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityRequest6Action
>;

export const Id = {
  Sd: "sd",
  Ma: "ma",
  Lfi: "lfi",
  Rfi: "rfi",
  Rce: "rce",
  Php: "php",
  Gen: "gen",
  Xss: "xss",
  Sqli: "sqli",
  Sf: "sf",
  Java: "java",
} as const;
export type Id = ClosedEnum<typeof Id>;

export const UpdateFirewallConfigRequestBodySecurityRequest6ValueAction = {
  Deny: "deny",
  Log: "log",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest6ValueAction =
  ClosedEnum<typeof UpdateFirewallConfigRequestBodySecurityRequest6ValueAction>;

export type UpdateFirewallConfigRequestBodyValue = {
  active: boolean;
  action: UpdateFirewallConfigRequestBodySecurityRequest6ValueAction;
};

/**
 * Enable a managed rule
 */
export type RequestBody6 = {
  action: UpdateFirewallConfigRequestBodySecurityRequest6Action;
  id: Id;
  value: UpdateFirewallConfigRequestBodyValue;
};

export const UpdateFirewallConfigRequestBodySecurityRequest5Action = {
  RulesPriority: "rules.priority",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest5Action = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityRequest5Action
>;

/**
 * Reorder a custom rule
 */
export type UpdateFirewallConfigRequestBody5 = {
  action: UpdateFirewallConfigRequestBodySecurityRequest5Action;
  id: string;
  value: number;
};

export const UpdateFirewallConfigRequestBodySecurityRequestAction = {
  RulesRemove: "rules.remove",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequestAction = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityRequestAction
>;

/**
 * Remove a custom rule
 */
export type UpdateFirewallConfigRequestBody4 = {
  action: UpdateFirewallConfigRequestBodySecurityRequestAction;
  id: string;
  value?: any | null | undefined;
};

export const UpdateFirewallConfigRequestBodySecurityAction = {
  RulesUpdate: "rules.update",
} as const;
export type UpdateFirewallConfigRequestBodySecurityAction = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityAction
>;

/**
 * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
 */
export const UpdateFirewallConfigRequestBodySecurityType = {
  Host: "host",
  Path: "path",
  Method: "method",
  Header: "header",
  Query: "query",
  Cookie: "cookie",
  TargetPath: "target_path",
  RawPath: "raw_path",
  IpAddress: "ip_address",
  Region: "region",
  Protocol: "protocol",
  Scheme: "scheme",
  Environment: "environment",
  UserAgent: "user_agent",
  GeoContinent: "geo_continent",
  GeoCountry: "geo_country",
  GeoCountryRegion: "geo_country_region",
  GeoCity: "geo_city",
  GeoAsNumber: "geo_as_number",
  Ja4Digest: "ja4_digest",
  Ja3Digest: "ja3_digest",
  RateLimitApiId: "rate_limit_api_id",
} as const;
/**
 * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
 */
export type UpdateFirewallConfigRequestBodySecurityType = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodySecurityType
>;

/**
 * [Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value
 */
export const RequestBodyOp = {
  Re: "re",
  Eq: "eq",
  Neq: "neq",
  Ex: "ex",
  Nex: "nex",
  Inc: "inc",
  Ninc: "ninc",
  Pre: "pre",
  Suf: "suf",
  Sub: "sub",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
/**
 * [Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value
 */
export type RequestBodyOp = ClosedEnum<typeof RequestBodyOp>;

export type UpdateFirewallConfigRequestBodySecurityRequest3Value =
  | string
  | Array<string>
  | number;

export type RequestBodyConditions = {
  /**
   * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
   */
  type: UpdateFirewallConfigRequestBodySecurityType;
  /**
   * [Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value
   */
  op: RequestBodyOp;
  neg?: boolean | undefined;
  key?: string | undefined;
  value?: string | Array<string> | number | undefined;
};

export type RequestBodyConditionGroup = {
  conditions: Array<RequestBodyConditions>;
};

export const UpdateFirewallConfigRequestBodySecurityRequest3ValueAction = {
  Log: "log",
  Challenge: "challenge",
  Deny: "deny",
  Bypass: "bypass",
  RateLimit: "rate_limit",
  Redirect: "redirect",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest3ValueAction =
  ClosedEnum<typeof UpdateFirewallConfigRequestBodySecurityRequest3ValueAction>;

export const UpdateFirewallConfigRateLimitAlgo = {
  FixedWindow: "fixed_window",
  TokenBucket: "token_bucket",
} as const;
export type UpdateFirewallConfigRateLimitAlgo = ClosedEnum<
  typeof UpdateFirewallConfigRateLimitAlgo
>;

export const UpdateFirewallConfigAction1 = {
  Log: "log",
  Challenge: "challenge",
  Deny: "deny",
  RateLimit: "rate_limit",
} as const;
export type UpdateFirewallConfigAction1 = ClosedEnum<
  typeof UpdateFirewallConfigAction1
>;

export type UpdateFirewallConfigRateLimitAction =
  | UpdateFirewallConfigAction1
  | any;

export type UpdateFirewallConfigRateLimit1 = {
  algo: UpdateFirewallConfigRateLimitAlgo;
  window: number;
  limit: number;
  keys: Array<string>;
  action?: UpdateFirewallConfigAction1 | any | null | undefined;
};

export type RequestBodyRateLimit = UpdateFirewallConfigRateLimit1 | any;

export type UpdateFirewallConfigRedirect1 = {
  location: string;
  permanent: boolean;
};

export type RequestBodyRedirect = UpdateFirewallConfigRedirect1 | any;

export type RequestBodyMitigate = {
  action: UpdateFirewallConfigRequestBodySecurityRequest3ValueAction;
  rateLimit?: UpdateFirewallConfigRateLimit1 | any | null | undefined;
  redirect?: UpdateFirewallConfigRedirect1 | any | null | undefined;
  actionDuration?: string | null | undefined;
  bypassSystem?: boolean | null | undefined;
};

export type UpdateFirewallConfigRequestBodySecurityRequest3Action = {
  mitigate?: RequestBodyMitigate | undefined;
};

export type RequestBodyValue = {
  name: string;
  description?: string | undefined;
  active: boolean;
  conditionGroup: Array<RequestBodyConditionGroup>;
  action: UpdateFirewallConfigRequestBodySecurityRequest3Action;
};

/**
 * Update a custom rule
 */
export type UpdateFirewallConfigRequestBody3 = {
  action: UpdateFirewallConfigRequestBodySecurityAction;
  id: string;
  value: RequestBodyValue;
};

export const UpdateFirewallConfigRequestBodyAction = {
  RulesInsert: "rules.insert",
} as const;
export type UpdateFirewallConfigRequestBodyAction = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodyAction
>;

/**
 * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
 */
export const UpdateFirewallConfigRequestBodyType = {
  Host: "host",
  Path: "path",
  Method: "method",
  Header: "header",
  Query: "query",
  Cookie: "cookie",
  TargetPath: "target_path",
  RawPath: "raw_path",
  IpAddress: "ip_address",
  Region: "region",
  Protocol: "protocol",
  Scheme: "scheme",
  Environment: "environment",
  UserAgent: "user_agent",
  GeoContinent: "geo_continent",
  GeoCountry: "geo_country",
  GeoCountryRegion: "geo_country_region",
  GeoCity: "geo_city",
  GeoAsNumber: "geo_as_number",
  Ja4Digest: "ja4_digest",
  Ja3Digest: "ja3_digest",
  RateLimitApiId: "rate_limit_api_id",
} as const;
/**
 * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
 */
export type UpdateFirewallConfigRequestBodyType = ClosedEnum<
  typeof UpdateFirewallConfigRequestBodyType
>;

/**
 * [Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value.
 */
export const Op = {
  Re: "re",
  Eq: "eq",
  Neq: "neq",
  Ex: "ex",
  Nex: "nex",
  Inc: "inc",
  Ninc: "ninc",
  Pre: "pre",
  Suf: "suf",
  Sub: "sub",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
/**
 * [Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value.
 */
export type Op = ClosedEnum<typeof Op>;

export type UpdateFirewallConfigRequestBodySecurityRequest2Value =
  | string
  | Array<string>
  | number;

export type Conditions = {
  /**
   * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
   */
  type: UpdateFirewallConfigRequestBodyType;
  /**
   * [Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value.
   */
  op: Op;
  neg?: boolean | undefined;
  key?: string | undefined;
  value?: string | Array<string> | number | undefined;
};

export type ConditionGroup = {
  conditions: Array<Conditions>;
};

export const UpdateFirewallConfigRequestBodySecurityRequest2ValueAction = {
  Log: "log",
  Challenge: "challenge",
  Deny: "deny",
  Bypass: "bypass",
  RateLimit: "rate_limit",
  Redirect: "redirect",
} as const;
export type UpdateFirewallConfigRequestBodySecurityRequest2ValueAction =
  ClosedEnum<typeof UpdateFirewallConfigRequestBodySecurityRequest2ValueAction>;

export const RateLimitAlgo = {
  FixedWindow: "fixed_window",
  TokenBucket: "token_bucket",
} as const;
export type RateLimitAlgo = ClosedEnum<typeof RateLimitAlgo>;

export const Action1 = {
  Log: "log",
  Challenge: "challenge",
  Deny: "deny",
  RateLimit: "rate_limit",
} as const;
export type Action1 = ClosedEnum<typeof Action1>;

export type RateLimitAction = Action1 | any;

export type RateLimit1 = {
  algo: RateLimitAlgo;
  window: number;
  limit: number;
  keys: Array<string>;
  action?: Action1 | any | null | undefined;
};

export type RateLimit = RateLimit1 | any;

export type Redirect1 = {
  location: string;
  permanent: boolean;
};

export type Redirect = Redirect1 | any;

export type Mitigate = {
  action: UpdateFirewallConfigRequestBodySecurityRequest2ValueAction;
  rateLimit?: RateLimit1 | any | null | undefined;
  redirect?: Redirect1 | any | null | undefined;
  actionDuration?: string | null | undefined;
  bypassSystem?: boolean | null | undefined;
};

export type UpdateFirewallConfigRequestBodySecurityRequest2Action = {
  mitigate?: Mitigate | undefined;
};

export type Value = {
  name: string;
  description?: string | undefined;
  active: boolean;
  conditionGroup: Array<ConditionGroup>;
  action: UpdateFirewallConfigRequestBodySecurityRequest2Action;
};

/**
 * Add a custom rule
 */
export type UpdateFirewallConfigRequestBody2 = {
  action: UpdateFirewallConfigRequestBodyAction;
  id?: any | null | undefined;
  value: Value;
};

export const RequestBodyAction = {
  FirewallEnabled: "firewallEnabled",
} as const;
export type RequestBodyAction = ClosedEnum<typeof RequestBodyAction>;

/**
 * Enable Firewall
 */
export type UpdateFirewallConfigRequestBody1 = {
  action: RequestBodyAction;
  id?: any | null | undefined;
  value: boolean;
};

export type UpdateFirewallConfigRequestBody =
  | UpdateFirewallConfigRequestBody1
  | UpdateFirewallConfigRequestBody2
  | UpdateFirewallConfigRequestBody3
  | UpdateFirewallConfigRequestBody4
  | UpdateFirewallConfigRequestBody5
  | RequestBody6
  | RequestBody7
  | RequestBody8
  | RequestBody9
  | RequestBody10
  | Eleven
  | Twelve;

export type UpdateFirewallConfigRequest = {
  projectId: string;
  /**
   * The Team identifier to perform the request on behalf of.
   */
  teamId?: string | undefined;
  /**
   * The Team slug to perform the request on behalf of.
   */
  slug?: string | undefined;
  requestBody:
    | UpdateFirewallConfigRequestBody1
    | UpdateFirewallConfigRequestBody2
    | UpdateFirewallConfigRequestBody3
    | UpdateFirewallConfigRequestBody4
    | UpdateFirewallConfigRequestBody5
    | RequestBody6
    | RequestBody7
    | RequestBody8
    | RequestBody9
    | RequestBody10
    | Eleven
    | Twelve;
};

export type UpdateFirewallConfigResponseBody = {};

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest12Action$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest12Action
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest12Action);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest12Action$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest12Action
  > = UpdateFirewallConfigRequestBodySecurityRequest12Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest12Action$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest12Action$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest12Action$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest12Action$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest12Action$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest12Value$inboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest12Value,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active: z.boolean(),
    action: UpdateFirewallConfigRequestBodySecurityRequest12Action$inboundSchema
      .optional(),
  });

/** @internal */
export type UpdateFirewallConfigRequestBodySecurityRequest12Value$Outbound = {
  active: boolean;
  action?: string | undefined;
};

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest12Value$outboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest12Value$Outbound,
    z.ZodTypeDef,
    UpdateFirewallConfigRequestBodySecurityRequest12Value
  > = z.object({
    active: z.boolean(),
    action:
      UpdateFirewallConfigRequestBodySecurityRequest12Action$outboundSchema
        .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest12Value$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest12Value$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest12Value$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest12Value$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest12Value$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest12Value$Outbound` instead. */
  export type Outbound =
    UpdateFirewallConfigRequestBodySecurityRequest12Value$Outbound;
}

export function updateFirewallConfigRequestBodySecurityRequest12ValueToJSON(
  updateFirewallConfigRequestBodySecurityRequest12Value:
    UpdateFirewallConfigRequestBodySecurityRequest12Value,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBodySecurityRequest12Value$outboundSchema.parse(
      updateFirewallConfigRequestBodySecurityRequest12Value,
    ),
  );
}

export function updateFirewallConfigRequestBodySecurityRequest12ValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateFirewallConfigRequestBodySecurityRequest12Value,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateFirewallConfigRequestBodySecurityRequest12Value$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateFirewallConfigRequestBodySecurityRequest12Value' from JSON`,
  );
}

/** @internal */
export const Twelve$inboundSchema: z.ZodType<Twelve, z.ZodTypeDef, unknown> = z
  .object({
    action: z.literal("managedRuleGroup.update").optional(),
    id: z.string(),
    value: z.record(
      z.lazy(() =>
        UpdateFirewallConfigRequestBodySecurityRequest12Value$inboundSchema
      ),
    ),
  });

/** @internal */
export type Twelve$Outbound = {
  action: "managedRuleGroup.update";
  id: string;
  value: {
    [k: string]: UpdateFirewallConfigRequestBodySecurityRequest12Value$Outbound;
  };
};

/** @internal */
export const Twelve$outboundSchema: z.ZodType<
  Twelve$Outbound,
  z.ZodTypeDef,
  Twelve
> = z.object({
  action: z.literal("managedRuleGroup.update").default(
    "managedRuleGroup.update" as const,
  ),
  id: z.string(),
  value: z.record(
    z.lazy(() =>
      UpdateFirewallConfigRequestBodySecurityRequest12Value$outboundSchema
    ),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Twelve$ {
  /** @deprecated use `Twelve$inboundSchema` instead. */
  export const inboundSchema = Twelve$inboundSchema;
  /** @deprecated use `Twelve$outboundSchema` instead. */
  export const outboundSchema = Twelve$outboundSchema;
  /** @deprecated use `Twelve$Outbound` instead. */
  export type Outbound = Twelve$Outbound;
}

export function twelveToJSON(twelve: Twelve): string {
  return JSON.stringify(Twelve$outboundSchema.parse(twelve));
}

export function twelveFromJSON(
  jsonString: string,
): SafeParseResult<Twelve, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Twelve$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Twelve' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest11Action$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest11Action
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest11Action);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest11Action$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest11Action
  > = UpdateFirewallConfigRequestBodySecurityRequest11Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest11Action$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest11Action$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest11Action$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest11Action$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest11Action$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest11ValueAction$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest11ValueAction
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest11ValueAction);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest11ValueAction$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest11ValueAction
  > = UpdateFirewallConfigRequestBodySecurityRequest11ValueAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest11ValueAction$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest11ValueAction$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest11ValueAction$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest11ValueAction$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest11ValueAction$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest11Value$inboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest11Value,
    z.ZodTypeDef,
    unknown
  > = z.object({
    action:
      UpdateFirewallConfigRequestBodySecurityRequest11ValueAction$inboundSchema
        .optional(),
    active: z.boolean(),
  });

/** @internal */
export type UpdateFirewallConfigRequestBodySecurityRequest11Value$Outbound = {
  action?: string | undefined;
  active: boolean;
};

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest11Value$outboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest11Value$Outbound,
    z.ZodTypeDef,
    UpdateFirewallConfigRequestBodySecurityRequest11Value
  > = z.object({
    action:
      UpdateFirewallConfigRequestBodySecurityRequest11ValueAction$outboundSchema
        .optional(),
    active: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest11Value$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest11Value$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest11Value$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest11Value$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest11Value$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest11Value$Outbound` instead. */
  export type Outbound =
    UpdateFirewallConfigRequestBodySecurityRequest11Value$Outbound;
}

export function updateFirewallConfigRequestBodySecurityRequest11ValueToJSON(
  updateFirewallConfigRequestBodySecurityRequest11Value:
    UpdateFirewallConfigRequestBodySecurityRequest11Value,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBodySecurityRequest11Value$outboundSchema.parse(
      updateFirewallConfigRequestBodySecurityRequest11Value,
    ),
  );
}

export function updateFirewallConfigRequestBodySecurityRequest11ValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateFirewallConfigRequestBodySecurityRequest11Value,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateFirewallConfigRequestBodySecurityRequest11Value$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateFirewallConfigRequestBodySecurityRequest11Value' from JSON`,
  );
}

/** @internal */
export const Eleven$inboundSchema: z.ZodType<Eleven, z.ZodTypeDef, unknown> = z
  .object({
    action:
      UpdateFirewallConfigRequestBodySecurityRequest11Action$inboundSchema,
    id: z.string(),
    value: z.lazy(() =>
      UpdateFirewallConfigRequestBodySecurityRequest11Value$inboundSchema
    ),
  });

/** @internal */
export type Eleven$Outbound = {
  action: string;
  id: string;
  value: UpdateFirewallConfigRequestBodySecurityRequest11Value$Outbound;
};

/** @internal */
export const Eleven$outboundSchema: z.ZodType<
  Eleven$Outbound,
  z.ZodTypeDef,
  Eleven
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest11Action$outboundSchema,
  id: z.string(),
  value: z.lazy(() =>
    UpdateFirewallConfigRequestBodySecurityRequest11Value$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eleven$ {
  /** @deprecated use `Eleven$inboundSchema` instead. */
  export const inboundSchema = Eleven$inboundSchema;
  /** @deprecated use `Eleven$outboundSchema` instead. */
  export const outboundSchema = Eleven$outboundSchema;
  /** @deprecated use `Eleven$Outbound` instead. */
  export type Outbound = Eleven$Outbound;
}

export function elevenToJSON(eleven: Eleven): string {
  return JSON.stringify(Eleven$outboundSchema.parse(eleven));
}

export function elevenFromJSON(
  jsonString: string,
): SafeParseResult<Eleven, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Eleven$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Eleven' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest10Action$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest10Action
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest10Action);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest10Action$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest10Action
  > = UpdateFirewallConfigRequestBodySecurityRequest10Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest10Action$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest10Action$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest10Action$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest10Action$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest10Action$outboundSchema;
}

/** @internal */
export const RequestBody10$inboundSchema: z.ZodType<
  RequestBody10,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest10Action$inboundSchema,
  id: z.string(),
  value: z.nullable(z.any()).optional(),
});

/** @internal */
export type RequestBody10$Outbound = {
  action: string;
  id: string;
  value?: any | null | undefined;
};

/** @internal */
export const RequestBody10$outboundSchema: z.ZodType<
  RequestBody10$Outbound,
  z.ZodTypeDef,
  RequestBody10
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest10Action$outboundSchema,
  id: z.string(),
  value: z.nullable(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBody10$ {
  /** @deprecated use `RequestBody10$inboundSchema` instead. */
  export const inboundSchema = RequestBody10$inboundSchema;
  /** @deprecated use `RequestBody10$outboundSchema` instead. */
  export const outboundSchema = RequestBody10$outboundSchema;
  /** @deprecated use `RequestBody10$Outbound` instead. */
  export type Outbound = RequestBody10$Outbound;
}

export function requestBody10ToJSON(requestBody10: RequestBody10): string {
  return JSON.stringify(RequestBody10$outboundSchema.parse(requestBody10));
}

export function requestBody10FromJSON(
  jsonString: string,
): SafeParseResult<RequestBody10, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBody10$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBody10' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest9Action$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest9Action
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest9Action);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest9Action$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest9Action
  > = UpdateFirewallConfigRequestBodySecurityRequest9Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest9Action$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest9Action$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest9Action$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest9Action$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest9Action$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest9ValueAction$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest9ValueAction
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest9ValueAction);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest9ValueAction$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest9ValueAction
  > = UpdateFirewallConfigRequestBodySecurityRequest9ValueAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest9ValueAction$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest9ValueAction$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest9ValueAction$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest9ValueAction$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest9ValueAction$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequestValue$inboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequestValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    hostname: z.string(),
    ip: z.string(),
    notes: z.string().optional(),
    action:
      UpdateFirewallConfigRequestBodySecurityRequest9ValueAction$inboundSchema,
  });

/** @internal */
export type UpdateFirewallConfigRequestBodySecurityRequestValue$Outbound = {
  hostname: string;
  ip: string;
  notes?: string | undefined;
  action: string;
};

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequestValue$outboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequestValue$Outbound,
    z.ZodTypeDef,
    UpdateFirewallConfigRequestBodySecurityRequestValue
  > = z.object({
    hostname: z.string(),
    ip: z.string(),
    notes: z.string().optional(),
    action:
      UpdateFirewallConfigRequestBodySecurityRequest9ValueAction$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequestValue$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequestValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequestValue$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequestValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequestValue$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequestValue$Outbound` instead. */
  export type Outbound =
    UpdateFirewallConfigRequestBodySecurityRequestValue$Outbound;
}

export function updateFirewallConfigRequestBodySecurityRequestValueToJSON(
  updateFirewallConfigRequestBodySecurityRequestValue:
    UpdateFirewallConfigRequestBodySecurityRequestValue,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBodySecurityRequestValue$outboundSchema.parse(
      updateFirewallConfigRequestBodySecurityRequestValue,
    ),
  );
}

export function updateFirewallConfigRequestBodySecurityRequestValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateFirewallConfigRequestBodySecurityRequestValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateFirewallConfigRequestBodySecurityRequestValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateFirewallConfigRequestBodySecurityRequestValue' from JSON`,
  );
}

/** @internal */
export const RequestBody9$inboundSchema: z.ZodType<
  RequestBody9,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest9Action$inboundSchema,
  id: z.string(),
  value: z.lazy(() =>
    UpdateFirewallConfigRequestBodySecurityRequestValue$inboundSchema
  ),
});

/** @internal */
export type RequestBody9$Outbound = {
  action: string;
  id: string;
  value: UpdateFirewallConfigRequestBodySecurityRequestValue$Outbound;
};

/** @internal */
export const RequestBody9$outboundSchema: z.ZodType<
  RequestBody9$Outbound,
  z.ZodTypeDef,
  RequestBody9
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest9Action$outboundSchema,
  id: z.string(),
  value: z.lazy(() =>
    UpdateFirewallConfigRequestBodySecurityRequestValue$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBody9$ {
  /** @deprecated use `RequestBody9$inboundSchema` instead. */
  export const inboundSchema = RequestBody9$inboundSchema;
  /** @deprecated use `RequestBody9$outboundSchema` instead. */
  export const outboundSchema = RequestBody9$outboundSchema;
  /** @deprecated use `RequestBody9$Outbound` instead. */
  export type Outbound = RequestBody9$Outbound;
}

export function requestBody9ToJSON(requestBody9: RequestBody9): string {
  return JSON.stringify(RequestBody9$outboundSchema.parse(requestBody9));
}

export function requestBody9FromJSON(
  jsonString: string,
): SafeParseResult<RequestBody9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBody9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBody9' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest8Action$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest8Action
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest8Action);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest8Action$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest8Action
  > = UpdateFirewallConfigRequestBodySecurityRequest8Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest8Action$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest8Action$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest8Action$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest8Action$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest8Action$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest8ValueAction$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest8ValueAction
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest8ValueAction);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest8ValueAction$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest8ValueAction
  > = UpdateFirewallConfigRequestBodySecurityRequest8ValueAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest8ValueAction$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest8ValueAction$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest8ValueAction$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest8ValueAction$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest8ValueAction$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityValue$inboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    hostname: z.string(),
    ip: z.string(),
    notes: z.string().optional(),
    action:
      UpdateFirewallConfigRequestBodySecurityRequest8ValueAction$inboundSchema,
  });

/** @internal */
export type UpdateFirewallConfigRequestBodySecurityValue$Outbound = {
  hostname: string;
  ip: string;
  notes?: string | undefined;
  action: string;
};

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityValue$outboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityValue$Outbound,
    z.ZodTypeDef,
    UpdateFirewallConfigRequestBodySecurityValue
  > = z.object({
    hostname: z.string(),
    ip: z.string(),
    notes: z.string().optional(),
    action:
      UpdateFirewallConfigRequestBodySecurityRequest8ValueAction$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityValue$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityValue$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityValue$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityValue$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRequestBodySecurityValue$Outbound;
}

export function updateFirewallConfigRequestBodySecurityValueToJSON(
  updateFirewallConfigRequestBodySecurityValue:
    UpdateFirewallConfigRequestBodySecurityValue,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBodySecurityValue$outboundSchema.parse(
      updateFirewallConfigRequestBodySecurityValue,
    ),
  );
}

export function updateFirewallConfigRequestBodySecurityValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateFirewallConfigRequestBodySecurityValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateFirewallConfigRequestBodySecurityValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateFirewallConfigRequestBodySecurityValue' from JSON`,
  );
}

/** @internal */
export const RequestBody8$inboundSchema: z.ZodType<
  RequestBody8,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest8Action$inboundSchema,
  id: z.nullable(z.any()).optional(),
  value: z.lazy(() =>
    UpdateFirewallConfigRequestBodySecurityValue$inboundSchema
  ),
});

/** @internal */
export type RequestBody8$Outbound = {
  action: string;
  id?: any | null | undefined;
  value: UpdateFirewallConfigRequestBodySecurityValue$Outbound;
};

/** @internal */
export const RequestBody8$outboundSchema: z.ZodType<
  RequestBody8$Outbound,
  z.ZodTypeDef,
  RequestBody8
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest8Action$outboundSchema,
  id: z.nullable(z.any()).optional(),
  value: z.lazy(() =>
    UpdateFirewallConfigRequestBodySecurityValue$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBody8$ {
  /** @deprecated use `RequestBody8$inboundSchema` instead. */
  export const inboundSchema = RequestBody8$inboundSchema;
  /** @deprecated use `RequestBody8$outboundSchema` instead. */
  export const outboundSchema = RequestBody8$outboundSchema;
  /** @deprecated use `RequestBody8$Outbound` instead. */
  export type Outbound = RequestBody8$Outbound;
}

export function requestBody8ToJSON(requestBody8: RequestBody8): string {
  return JSON.stringify(RequestBody8$outboundSchema.parse(requestBody8));
}

export function requestBody8FromJSON(
  jsonString: string,
): SafeParseResult<RequestBody8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBody8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBody8' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest7Action$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest7Action
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest7Action);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest7Action$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest7Action
  > = UpdateFirewallConfigRequestBodySecurityRequest7Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest7Action$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest7Action$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest7Action$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest7Action$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest7Action$outboundSchema;
}

/** @internal */
export const RequestBody7$inboundSchema: z.ZodType<
  RequestBody7,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest7Action$inboundSchema,
  id: z.nullable(z.any()).optional(),
  value: z.nullable(z.any()).optional(),
});

/** @internal */
export type RequestBody7$Outbound = {
  action: string;
  id?: any | null | undefined;
  value?: any | null | undefined;
};

/** @internal */
export const RequestBody7$outboundSchema: z.ZodType<
  RequestBody7$Outbound,
  z.ZodTypeDef,
  RequestBody7
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest7Action$outboundSchema,
  id: z.nullable(z.any()).optional(),
  value: z.nullable(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBody7$ {
  /** @deprecated use `RequestBody7$inboundSchema` instead. */
  export const inboundSchema = RequestBody7$inboundSchema;
  /** @deprecated use `RequestBody7$outboundSchema` instead. */
  export const outboundSchema = RequestBody7$outboundSchema;
  /** @deprecated use `RequestBody7$Outbound` instead. */
  export type Outbound = RequestBody7$Outbound;
}

export function requestBody7ToJSON(requestBody7: RequestBody7): string {
  return JSON.stringify(RequestBody7$outboundSchema.parse(requestBody7));
}

export function requestBody7FromJSON(
  jsonString: string,
): SafeParseResult<RequestBody7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBody7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBody7' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest6Action$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest6Action
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest6Action);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest6Action$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest6Action
  > = UpdateFirewallConfigRequestBodySecurityRequest6Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest6Action$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest6Action$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest6Action$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest6Action$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest6Action$outboundSchema;
}

/** @internal */
export const Id$inboundSchema: z.ZodNativeEnum<typeof Id> = z.nativeEnum(Id);

/** @internal */
export const Id$outboundSchema: z.ZodNativeEnum<typeof Id> = Id$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Id$ {
  /** @deprecated use `Id$inboundSchema` instead. */
  export const inboundSchema = Id$inboundSchema;
  /** @deprecated use `Id$outboundSchema` instead. */
  export const outboundSchema = Id$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest6ValueAction$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest6ValueAction
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest6ValueAction);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest6ValueAction$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest6ValueAction
  > = UpdateFirewallConfigRequestBodySecurityRequest6ValueAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest6ValueAction$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest6ValueAction$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest6ValueAction$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest6ValueAction$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest6ValueAction$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodyValue$inboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBodyValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean(),
  action:
    UpdateFirewallConfigRequestBodySecurityRequest6ValueAction$inboundSchema,
});

/** @internal */
export type UpdateFirewallConfigRequestBodyValue$Outbound = {
  active: boolean;
  action: string;
};

/** @internal */
export const UpdateFirewallConfigRequestBodyValue$outboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBodyValue$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRequestBodyValue
> = z.object({
  active: z.boolean(),
  action:
    UpdateFirewallConfigRequestBodySecurityRequest6ValueAction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodyValue$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodyValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodyValue$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodyValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodyValue$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodyValue$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRequestBodyValue$Outbound;
}

export function updateFirewallConfigRequestBodyValueToJSON(
  updateFirewallConfigRequestBodyValue: UpdateFirewallConfigRequestBodyValue,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBodyValue$outboundSchema.parse(
      updateFirewallConfigRequestBodyValue,
    ),
  );
}

export function updateFirewallConfigRequestBodyValueFromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRequestBodyValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateFirewallConfigRequestBodyValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRequestBodyValue' from JSON`,
  );
}

/** @internal */
export const RequestBody6$inboundSchema: z.ZodType<
  RequestBody6,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest6Action$inboundSchema,
  id: Id$inboundSchema,
  value: z.lazy(() => UpdateFirewallConfigRequestBodyValue$inboundSchema),
});

/** @internal */
export type RequestBody6$Outbound = {
  action: string;
  id: string;
  value: UpdateFirewallConfigRequestBodyValue$Outbound;
};

/** @internal */
export const RequestBody6$outboundSchema: z.ZodType<
  RequestBody6$Outbound,
  z.ZodTypeDef,
  RequestBody6
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest6Action$outboundSchema,
  id: Id$outboundSchema,
  value: z.lazy(() => UpdateFirewallConfigRequestBodyValue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBody6$ {
  /** @deprecated use `RequestBody6$inboundSchema` instead. */
  export const inboundSchema = RequestBody6$inboundSchema;
  /** @deprecated use `RequestBody6$outboundSchema` instead. */
  export const outboundSchema = RequestBody6$outboundSchema;
  /** @deprecated use `RequestBody6$Outbound` instead. */
  export type Outbound = RequestBody6$Outbound;
}

export function requestBody6ToJSON(requestBody6: RequestBody6): string {
  return JSON.stringify(RequestBody6$outboundSchema.parse(requestBody6));
}

export function requestBody6FromJSON(
  jsonString: string,
): SafeParseResult<RequestBody6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBody6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBody6' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest5Action$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest5Action
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest5Action);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest5Action$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest5Action
  > = UpdateFirewallConfigRequestBodySecurityRequest5Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest5Action$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest5Action$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest5Action$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest5Action$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest5Action$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBody5$inboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody5,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest5Action$inboundSchema,
  id: z.string(),
  value: z.number(),
});

/** @internal */
export type UpdateFirewallConfigRequestBody5$Outbound = {
  action: string;
  id: string;
  value: number;
};

/** @internal */
export const UpdateFirewallConfigRequestBody5$outboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody5$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRequestBody5
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequest5Action$outboundSchema,
  id: z.string(),
  value: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBody5$ {
  /** @deprecated use `UpdateFirewallConfigRequestBody5$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigRequestBody5$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody5$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigRequestBody5$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody5$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRequestBody5$Outbound;
}

export function updateFirewallConfigRequestBody5ToJSON(
  updateFirewallConfigRequestBody5: UpdateFirewallConfigRequestBody5,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBody5$outboundSchema.parse(
      updateFirewallConfigRequestBody5,
    ),
  );
}

export function updateFirewallConfigRequestBody5FromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRequestBody5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFirewallConfigRequestBody5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRequestBody5' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequestAction$inboundSchema:
  z.ZodNativeEnum<typeof UpdateFirewallConfigRequestBodySecurityRequestAction> =
    z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequestAction);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequestAction$outboundSchema:
  z.ZodNativeEnum<typeof UpdateFirewallConfigRequestBodySecurityRequestAction> =
    UpdateFirewallConfigRequestBodySecurityRequestAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequestAction$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequestAction$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequestAction$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequestAction$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequestAction$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBody4$inboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody4,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequestAction$inboundSchema,
  id: z.string(),
  value: z.nullable(z.any()).optional(),
});

/** @internal */
export type UpdateFirewallConfigRequestBody4$Outbound = {
  action: string;
  id: string;
  value?: any | null | undefined;
};

/** @internal */
export const UpdateFirewallConfigRequestBody4$outboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody4$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRequestBody4
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityRequestAction$outboundSchema,
  id: z.string(),
  value: z.nullable(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBody4$ {
  /** @deprecated use `UpdateFirewallConfigRequestBody4$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigRequestBody4$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody4$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigRequestBody4$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody4$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRequestBody4$Outbound;
}

export function updateFirewallConfigRequestBody4ToJSON(
  updateFirewallConfigRequestBody4: UpdateFirewallConfigRequestBody4,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBody4$outboundSchema.parse(
      updateFirewallConfigRequestBody4,
    ),
  );
}

export function updateFirewallConfigRequestBody4FromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRequestBody4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFirewallConfigRequestBody4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRequestBody4' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityAction$inboundSchema:
  z.ZodNativeEnum<typeof UpdateFirewallConfigRequestBodySecurityAction> = z
    .nativeEnum(UpdateFirewallConfigRequestBodySecurityAction);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityAction$outboundSchema:
  z.ZodNativeEnum<typeof UpdateFirewallConfigRequestBodySecurityAction> =
    UpdateFirewallConfigRequestBodySecurityAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityAction$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityAction$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityAction$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityAction$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityAction$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityType$inboundSchema:
  z.ZodNativeEnum<typeof UpdateFirewallConfigRequestBodySecurityType> = z
    .nativeEnum(UpdateFirewallConfigRequestBodySecurityType);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityType$outboundSchema:
  z.ZodNativeEnum<typeof UpdateFirewallConfigRequestBodySecurityType> =
    UpdateFirewallConfigRequestBodySecurityType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityType$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityType$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityType$outboundSchema;
}

/** @internal */
export const RequestBodyOp$inboundSchema: z.ZodNativeEnum<
  typeof RequestBodyOp
> = z.nativeEnum(RequestBodyOp);

/** @internal */
export const RequestBodyOp$outboundSchema: z.ZodNativeEnum<
  typeof RequestBodyOp
> = RequestBodyOp$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyOp$ {
  /** @deprecated use `RequestBodyOp$inboundSchema` instead. */
  export const inboundSchema = RequestBodyOp$inboundSchema;
  /** @deprecated use `RequestBodyOp$outboundSchema` instead. */
  export const outboundSchema = RequestBodyOp$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest3Value$inboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest3Value,
    z.ZodTypeDef,
    unknown
  > = z.union([z.string(), z.array(z.string()), z.number()]);

/** @internal */
export type UpdateFirewallConfigRequestBodySecurityRequest3Value$Outbound =
  | string
  | Array<string>
  | number;

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest3Value$outboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest3Value$Outbound,
    z.ZodTypeDef,
    UpdateFirewallConfigRequestBodySecurityRequest3Value
  > = z.union([z.string(), z.array(z.string()), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest3Value$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest3Value$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest3Value$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest3Value$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest3Value$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest3Value$Outbound` instead. */
  export type Outbound =
    UpdateFirewallConfigRequestBodySecurityRequest3Value$Outbound;
}

export function updateFirewallConfigRequestBodySecurityRequest3ValueToJSON(
  updateFirewallConfigRequestBodySecurityRequest3Value:
    UpdateFirewallConfigRequestBodySecurityRequest3Value,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBodySecurityRequest3Value$outboundSchema.parse(
      updateFirewallConfigRequestBodySecurityRequest3Value,
    ),
  );
}

export function updateFirewallConfigRequestBodySecurityRequest3ValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateFirewallConfigRequestBodySecurityRequest3Value,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateFirewallConfigRequestBodySecurityRequest3Value$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateFirewallConfigRequestBodySecurityRequest3Value' from JSON`,
  );
}

/** @internal */
export const RequestBodyConditions$inboundSchema: z.ZodType<
  RequestBodyConditions,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdateFirewallConfigRequestBodySecurityType$inboundSchema,
  op: RequestBodyOp$inboundSchema,
  neg: z.boolean().optional(),
  key: z.string().optional(),
  value: z.union([z.string(), z.array(z.string()), z.number()]).optional(),
});

/** @internal */
export type RequestBodyConditions$Outbound = {
  type: string;
  op: string;
  neg?: boolean | undefined;
  key?: string | undefined;
  value?: string | Array<string> | number | undefined;
};

/** @internal */
export const RequestBodyConditions$outboundSchema: z.ZodType<
  RequestBodyConditions$Outbound,
  z.ZodTypeDef,
  RequestBodyConditions
> = z.object({
  type: UpdateFirewallConfigRequestBodySecurityType$outboundSchema,
  op: RequestBodyOp$outboundSchema,
  neg: z.boolean().optional(),
  key: z.string().optional(),
  value: z.union([z.string(), z.array(z.string()), z.number()]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyConditions$ {
  /** @deprecated use `RequestBodyConditions$inboundSchema` instead. */
  export const inboundSchema = RequestBodyConditions$inboundSchema;
  /** @deprecated use `RequestBodyConditions$outboundSchema` instead. */
  export const outboundSchema = RequestBodyConditions$outboundSchema;
  /** @deprecated use `RequestBodyConditions$Outbound` instead. */
  export type Outbound = RequestBodyConditions$Outbound;
}

export function requestBodyConditionsToJSON(
  requestBodyConditions: RequestBodyConditions,
): string {
  return JSON.stringify(
    RequestBodyConditions$outboundSchema.parse(requestBodyConditions),
  );
}

export function requestBodyConditionsFromJSON(
  jsonString: string,
): SafeParseResult<RequestBodyConditions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBodyConditions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyConditions' from JSON`,
  );
}

/** @internal */
export const RequestBodyConditionGroup$inboundSchema: z.ZodType<
  RequestBodyConditionGroup,
  z.ZodTypeDef,
  unknown
> = z.object({
  conditions: z.array(z.lazy(() => RequestBodyConditions$inboundSchema)),
});

/** @internal */
export type RequestBodyConditionGroup$Outbound = {
  conditions: Array<RequestBodyConditions$Outbound>;
};

/** @internal */
export const RequestBodyConditionGroup$outboundSchema: z.ZodType<
  RequestBodyConditionGroup$Outbound,
  z.ZodTypeDef,
  RequestBodyConditionGroup
> = z.object({
  conditions: z.array(z.lazy(() => RequestBodyConditions$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyConditionGroup$ {
  /** @deprecated use `RequestBodyConditionGroup$inboundSchema` instead. */
  export const inboundSchema = RequestBodyConditionGroup$inboundSchema;
  /** @deprecated use `RequestBodyConditionGroup$outboundSchema` instead. */
  export const outboundSchema = RequestBodyConditionGroup$outboundSchema;
  /** @deprecated use `RequestBodyConditionGroup$Outbound` instead. */
  export type Outbound = RequestBodyConditionGroup$Outbound;
}

export function requestBodyConditionGroupToJSON(
  requestBodyConditionGroup: RequestBodyConditionGroup,
): string {
  return JSON.stringify(
    RequestBodyConditionGroup$outboundSchema.parse(requestBodyConditionGroup),
  );
}

export function requestBodyConditionGroupFromJSON(
  jsonString: string,
): SafeParseResult<RequestBodyConditionGroup, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBodyConditionGroup$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyConditionGroup' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest3ValueAction$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest3ValueAction
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest3ValueAction);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest3ValueAction$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest3ValueAction
  > = UpdateFirewallConfigRequestBodySecurityRequest3ValueAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest3ValueAction$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest3ValueAction$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest3ValueAction$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest3ValueAction$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest3ValueAction$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRateLimitAlgo$inboundSchema: z.ZodNativeEnum<
  typeof UpdateFirewallConfigRateLimitAlgo
> = z.nativeEnum(UpdateFirewallConfigRateLimitAlgo);

/** @internal */
export const UpdateFirewallConfigRateLimitAlgo$outboundSchema: z.ZodNativeEnum<
  typeof UpdateFirewallConfigRateLimitAlgo
> = UpdateFirewallConfigRateLimitAlgo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRateLimitAlgo$ {
  /** @deprecated use `UpdateFirewallConfigRateLimitAlgo$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigRateLimitAlgo$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRateLimitAlgo$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRateLimitAlgo$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigAction1$inboundSchema: z.ZodNativeEnum<
  typeof UpdateFirewallConfigAction1
> = z.nativeEnum(UpdateFirewallConfigAction1);

/** @internal */
export const UpdateFirewallConfigAction1$outboundSchema: z.ZodNativeEnum<
  typeof UpdateFirewallConfigAction1
> = UpdateFirewallConfigAction1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigAction1$ {
  /** @deprecated use `UpdateFirewallConfigAction1$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigAction1$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigAction1$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigAction1$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRateLimitAction$inboundSchema: z.ZodType<
  UpdateFirewallConfigRateLimitAction,
  z.ZodTypeDef,
  unknown
> = z.union([UpdateFirewallConfigAction1$inboundSchema, z.any()]);

/** @internal */
export type UpdateFirewallConfigRateLimitAction$Outbound = string | any;

/** @internal */
export const UpdateFirewallConfigRateLimitAction$outboundSchema: z.ZodType<
  UpdateFirewallConfigRateLimitAction$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRateLimitAction
> = z.union([UpdateFirewallConfigAction1$outboundSchema, z.any()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRateLimitAction$ {
  /** @deprecated use `UpdateFirewallConfigRateLimitAction$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRateLimitAction$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRateLimitAction$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRateLimitAction$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRateLimitAction$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRateLimitAction$Outbound;
}

export function updateFirewallConfigRateLimitActionToJSON(
  updateFirewallConfigRateLimitAction: UpdateFirewallConfigRateLimitAction,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRateLimitAction$outboundSchema.parse(
      updateFirewallConfigRateLimitAction,
    ),
  );
}

export function updateFirewallConfigRateLimitActionFromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRateLimitAction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateFirewallConfigRateLimitAction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRateLimitAction' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRateLimit1$inboundSchema: z.ZodType<
  UpdateFirewallConfigRateLimit1,
  z.ZodTypeDef,
  unknown
> = z.object({
  algo: UpdateFirewallConfigRateLimitAlgo$inboundSchema,
  window: z.number(),
  limit: z.number(),
  keys: z.array(z.string()),
  action: z.nullable(
    z.union([UpdateFirewallConfigAction1$inboundSchema, z.any()]),
  ).optional(),
});

/** @internal */
export type UpdateFirewallConfigRateLimit1$Outbound = {
  algo: string;
  window: number;
  limit: number;
  keys: Array<string>;
  action?: string | any | null | undefined;
};

/** @internal */
export const UpdateFirewallConfigRateLimit1$outboundSchema: z.ZodType<
  UpdateFirewallConfigRateLimit1$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRateLimit1
> = z.object({
  algo: UpdateFirewallConfigRateLimitAlgo$outboundSchema,
  window: z.number(),
  limit: z.number(),
  keys: z.array(z.string()),
  action: z.nullable(
    z.union([UpdateFirewallConfigAction1$outboundSchema, z.any()]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRateLimit1$ {
  /** @deprecated use `UpdateFirewallConfigRateLimit1$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigRateLimit1$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRateLimit1$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigRateLimit1$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRateLimit1$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRateLimit1$Outbound;
}

export function updateFirewallConfigRateLimit1ToJSON(
  updateFirewallConfigRateLimit1: UpdateFirewallConfigRateLimit1,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRateLimit1$outboundSchema.parse(
      updateFirewallConfigRateLimit1,
    ),
  );
}

export function updateFirewallConfigRateLimit1FromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRateLimit1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFirewallConfigRateLimit1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRateLimit1' from JSON`,
  );
}

/** @internal */
export const RequestBodyRateLimit$inboundSchema: z.ZodType<
  RequestBodyRateLimit,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UpdateFirewallConfigRateLimit1$inboundSchema),
  z.any(),
]);

/** @internal */
export type RequestBodyRateLimit$Outbound =
  | UpdateFirewallConfigRateLimit1$Outbound
  | any;

/** @internal */
export const RequestBodyRateLimit$outboundSchema: z.ZodType<
  RequestBodyRateLimit$Outbound,
  z.ZodTypeDef,
  RequestBodyRateLimit
> = z.union([
  z.lazy(() => UpdateFirewallConfigRateLimit1$outboundSchema),
  z.any(),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyRateLimit$ {
  /** @deprecated use `RequestBodyRateLimit$inboundSchema` instead. */
  export const inboundSchema = RequestBodyRateLimit$inboundSchema;
  /** @deprecated use `RequestBodyRateLimit$outboundSchema` instead. */
  export const outboundSchema = RequestBodyRateLimit$outboundSchema;
  /** @deprecated use `RequestBodyRateLimit$Outbound` instead. */
  export type Outbound = RequestBodyRateLimit$Outbound;
}

export function requestBodyRateLimitToJSON(
  requestBodyRateLimit: RequestBodyRateLimit,
): string {
  return JSON.stringify(
    RequestBodyRateLimit$outboundSchema.parse(requestBodyRateLimit),
  );
}

export function requestBodyRateLimitFromJSON(
  jsonString: string,
): SafeParseResult<RequestBodyRateLimit, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBodyRateLimit$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyRateLimit' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRedirect1$inboundSchema: z.ZodType<
  UpdateFirewallConfigRedirect1,
  z.ZodTypeDef,
  unknown
> = z.object({
  location: z.string(),
  permanent: z.boolean(),
});

/** @internal */
export type UpdateFirewallConfigRedirect1$Outbound = {
  location: string;
  permanent: boolean;
};

/** @internal */
export const UpdateFirewallConfigRedirect1$outboundSchema: z.ZodType<
  UpdateFirewallConfigRedirect1$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRedirect1
> = z.object({
  location: z.string(),
  permanent: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRedirect1$ {
  /** @deprecated use `UpdateFirewallConfigRedirect1$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigRedirect1$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRedirect1$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigRedirect1$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRedirect1$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRedirect1$Outbound;
}

export function updateFirewallConfigRedirect1ToJSON(
  updateFirewallConfigRedirect1: UpdateFirewallConfigRedirect1,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRedirect1$outboundSchema.parse(
      updateFirewallConfigRedirect1,
    ),
  );
}

export function updateFirewallConfigRedirect1FromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRedirect1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFirewallConfigRedirect1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRedirect1' from JSON`,
  );
}

/** @internal */
export const RequestBodyRedirect$inboundSchema: z.ZodType<
  RequestBodyRedirect,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UpdateFirewallConfigRedirect1$inboundSchema),
  z.any(),
]);

/** @internal */
export type RequestBodyRedirect$Outbound =
  | UpdateFirewallConfigRedirect1$Outbound
  | any;

/** @internal */
export const RequestBodyRedirect$outboundSchema: z.ZodType<
  RequestBodyRedirect$Outbound,
  z.ZodTypeDef,
  RequestBodyRedirect
> = z.union([
  z.lazy(() => UpdateFirewallConfigRedirect1$outboundSchema),
  z.any(),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyRedirect$ {
  /** @deprecated use `RequestBodyRedirect$inboundSchema` instead. */
  export const inboundSchema = RequestBodyRedirect$inboundSchema;
  /** @deprecated use `RequestBodyRedirect$outboundSchema` instead. */
  export const outboundSchema = RequestBodyRedirect$outboundSchema;
  /** @deprecated use `RequestBodyRedirect$Outbound` instead. */
  export type Outbound = RequestBodyRedirect$Outbound;
}

export function requestBodyRedirectToJSON(
  requestBodyRedirect: RequestBodyRedirect,
): string {
  return JSON.stringify(
    RequestBodyRedirect$outboundSchema.parse(requestBodyRedirect),
  );
}

export function requestBodyRedirectFromJSON(
  jsonString: string,
): SafeParseResult<RequestBodyRedirect, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBodyRedirect$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyRedirect' from JSON`,
  );
}

/** @internal */
export const RequestBodyMitigate$inboundSchema: z.ZodType<
  RequestBodyMitigate,
  z.ZodTypeDef,
  unknown
> = z.object({
  action:
    UpdateFirewallConfigRequestBodySecurityRequest3ValueAction$inboundSchema,
  rateLimit: z.nullable(
    z.union([
      z.lazy(() => UpdateFirewallConfigRateLimit1$inboundSchema),
      z.any(),
    ]),
  ).optional(),
  redirect: z.nullable(
    z.union([
      z.lazy(() => UpdateFirewallConfigRedirect1$inboundSchema),
      z.any(),
    ]),
  ).optional(),
  actionDuration: z.nullable(z.string()).optional(),
  bypassSystem: z.nullable(z.boolean()).optional(),
});

/** @internal */
export type RequestBodyMitigate$Outbound = {
  action: string;
  rateLimit?: UpdateFirewallConfigRateLimit1$Outbound | any | null | undefined;
  redirect?: UpdateFirewallConfigRedirect1$Outbound | any | null | undefined;
  actionDuration?: string | null | undefined;
  bypassSystem?: boolean | null | undefined;
};

/** @internal */
export const RequestBodyMitigate$outboundSchema: z.ZodType<
  RequestBodyMitigate$Outbound,
  z.ZodTypeDef,
  RequestBodyMitigate
> = z.object({
  action:
    UpdateFirewallConfigRequestBodySecurityRequest3ValueAction$outboundSchema,
  rateLimit: z.nullable(
    z.union([
      z.lazy(() => UpdateFirewallConfigRateLimit1$outboundSchema),
      z.any(),
    ]),
  ).optional(),
  redirect: z.nullable(
    z.union([
      z.lazy(() => UpdateFirewallConfigRedirect1$outboundSchema),
      z.any(),
    ]),
  ).optional(),
  actionDuration: z.nullable(z.string()).optional(),
  bypassSystem: z.nullable(z.boolean()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyMitigate$ {
  /** @deprecated use `RequestBodyMitigate$inboundSchema` instead. */
  export const inboundSchema = RequestBodyMitigate$inboundSchema;
  /** @deprecated use `RequestBodyMitigate$outboundSchema` instead. */
  export const outboundSchema = RequestBodyMitigate$outboundSchema;
  /** @deprecated use `RequestBodyMitigate$Outbound` instead. */
  export type Outbound = RequestBodyMitigate$Outbound;
}

export function requestBodyMitigateToJSON(
  requestBodyMitigate: RequestBodyMitigate,
): string {
  return JSON.stringify(
    RequestBodyMitigate$outboundSchema.parse(requestBodyMitigate),
  );
}

export function requestBodyMitigateFromJSON(
  jsonString: string,
): SafeParseResult<RequestBodyMitigate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBodyMitigate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyMitigate' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest3Action$inboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest3Action,
    z.ZodTypeDef,
    unknown
  > = z.object({
    mitigate: z.lazy(() => RequestBodyMitigate$inboundSchema).optional(),
  });

/** @internal */
export type UpdateFirewallConfigRequestBodySecurityRequest3Action$Outbound = {
  mitigate?: RequestBodyMitigate$Outbound | undefined;
};

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest3Action$outboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest3Action$Outbound,
    z.ZodTypeDef,
    UpdateFirewallConfigRequestBodySecurityRequest3Action
  > = z.object({
    mitigate: z.lazy(() => RequestBodyMitigate$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest3Action$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest3Action$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest3Action$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest3Action$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest3Action$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest3Action$Outbound` instead. */
  export type Outbound =
    UpdateFirewallConfigRequestBodySecurityRequest3Action$Outbound;
}

export function updateFirewallConfigRequestBodySecurityRequest3ActionToJSON(
  updateFirewallConfigRequestBodySecurityRequest3Action:
    UpdateFirewallConfigRequestBodySecurityRequest3Action,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBodySecurityRequest3Action$outboundSchema.parse(
      updateFirewallConfigRequestBodySecurityRequest3Action,
    ),
  );
}

export function updateFirewallConfigRequestBodySecurityRequest3ActionFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateFirewallConfigRequestBodySecurityRequest3Action,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateFirewallConfigRequestBodySecurityRequest3Action$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateFirewallConfigRequestBodySecurityRequest3Action' from JSON`,
  );
}

/** @internal */
export const RequestBodyValue$inboundSchema: z.ZodType<
  RequestBodyValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  active: z.boolean(),
  conditionGroup: z.array(
    z.lazy(() => RequestBodyConditionGroup$inboundSchema),
  ),
  action: z.lazy(() =>
    UpdateFirewallConfigRequestBodySecurityRequest3Action$inboundSchema
  ),
});

/** @internal */
export type RequestBodyValue$Outbound = {
  name: string;
  description?: string | undefined;
  active: boolean;
  conditionGroup: Array<RequestBodyConditionGroup$Outbound>;
  action: UpdateFirewallConfigRequestBodySecurityRequest3Action$Outbound;
};

/** @internal */
export const RequestBodyValue$outboundSchema: z.ZodType<
  RequestBodyValue$Outbound,
  z.ZodTypeDef,
  RequestBodyValue
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  active: z.boolean(),
  conditionGroup: z.array(
    z.lazy(() => RequestBodyConditionGroup$outboundSchema),
  ),
  action: z.lazy(() =>
    UpdateFirewallConfigRequestBodySecurityRequest3Action$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyValue$ {
  /** @deprecated use `RequestBodyValue$inboundSchema` instead. */
  export const inboundSchema = RequestBodyValue$inboundSchema;
  /** @deprecated use `RequestBodyValue$outboundSchema` instead. */
  export const outboundSchema = RequestBodyValue$outboundSchema;
  /** @deprecated use `RequestBodyValue$Outbound` instead. */
  export type Outbound = RequestBodyValue$Outbound;
}

export function requestBodyValueToJSON(
  requestBodyValue: RequestBodyValue,
): string {
  return JSON.stringify(
    RequestBodyValue$outboundSchema.parse(requestBodyValue),
  );
}

export function requestBodyValueFromJSON(
  jsonString: string,
): SafeParseResult<RequestBodyValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBodyValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyValue' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBody3$inboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody3,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityAction$inboundSchema,
  id: z.string(),
  value: z.lazy(() => RequestBodyValue$inboundSchema),
});

/** @internal */
export type UpdateFirewallConfigRequestBody3$Outbound = {
  action: string;
  id: string;
  value: RequestBodyValue$Outbound;
};

/** @internal */
export const UpdateFirewallConfigRequestBody3$outboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody3$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRequestBody3
> = z.object({
  action: UpdateFirewallConfigRequestBodySecurityAction$outboundSchema,
  id: z.string(),
  value: z.lazy(() => RequestBodyValue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBody3$ {
  /** @deprecated use `UpdateFirewallConfigRequestBody3$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigRequestBody3$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody3$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigRequestBody3$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody3$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRequestBody3$Outbound;
}

export function updateFirewallConfigRequestBody3ToJSON(
  updateFirewallConfigRequestBody3: UpdateFirewallConfigRequestBody3,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBody3$outboundSchema.parse(
      updateFirewallConfigRequestBody3,
    ),
  );
}

export function updateFirewallConfigRequestBody3FromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRequestBody3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFirewallConfigRequestBody3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRequestBody3' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodyAction$inboundSchema:
  z.ZodNativeEnum<typeof UpdateFirewallConfigRequestBodyAction> = z.nativeEnum(
    UpdateFirewallConfigRequestBodyAction,
  );

/** @internal */
export const UpdateFirewallConfigRequestBodyAction$outboundSchema:
  z.ZodNativeEnum<typeof UpdateFirewallConfigRequestBodyAction> =
    UpdateFirewallConfigRequestBodyAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodyAction$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodyAction$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodyAction$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodyAction$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodyAction$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodyType$inboundSchema: z.ZodNativeEnum<
  typeof UpdateFirewallConfigRequestBodyType
> = z.nativeEnum(UpdateFirewallConfigRequestBodyType);

/** @internal */
export const UpdateFirewallConfigRequestBodyType$outboundSchema:
  z.ZodNativeEnum<typeof UpdateFirewallConfigRequestBodyType> =
    UpdateFirewallConfigRequestBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodyType$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodyType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodyType$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodyType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodyType$outboundSchema;
}

/** @internal */
export const Op$inboundSchema: z.ZodNativeEnum<typeof Op> = z.nativeEnum(Op);

/** @internal */
export const Op$outboundSchema: z.ZodNativeEnum<typeof Op> = Op$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Op$ {
  /** @deprecated use `Op$inboundSchema` instead. */
  export const inboundSchema = Op$inboundSchema;
  /** @deprecated use `Op$outboundSchema` instead. */
  export const outboundSchema = Op$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest2Value$inboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest2Value,
    z.ZodTypeDef,
    unknown
  > = z.union([z.string(), z.array(z.string()), z.number()]);

/** @internal */
export type UpdateFirewallConfigRequestBodySecurityRequest2Value$Outbound =
  | string
  | Array<string>
  | number;

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest2Value$outboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest2Value$Outbound,
    z.ZodTypeDef,
    UpdateFirewallConfigRequestBodySecurityRequest2Value
  > = z.union([z.string(), z.array(z.string()), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest2Value$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest2Value$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest2Value$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest2Value$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest2Value$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest2Value$Outbound` instead. */
  export type Outbound =
    UpdateFirewallConfigRequestBodySecurityRequest2Value$Outbound;
}

export function updateFirewallConfigRequestBodySecurityRequest2ValueToJSON(
  updateFirewallConfigRequestBodySecurityRequest2Value:
    UpdateFirewallConfigRequestBodySecurityRequest2Value,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBodySecurityRequest2Value$outboundSchema.parse(
      updateFirewallConfigRequestBodySecurityRequest2Value,
    ),
  );
}

export function updateFirewallConfigRequestBodySecurityRequest2ValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateFirewallConfigRequestBodySecurityRequest2Value,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateFirewallConfigRequestBodySecurityRequest2Value$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateFirewallConfigRequestBodySecurityRequest2Value' from JSON`,
  );
}

/** @internal */
export const Conditions$inboundSchema: z.ZodType<
  Conditions,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdateFirewallConfigRequestBodyType$inboundSchema,
  op: Op$inboundSchema,
  neg: z.boolean().optional(),
  key: z.string().optional(),
  value: z.union([z.string(), z.array(z.string()), z.number()]).optional(),
});

/** @internal */
export type Conditions$Outbound = {
  type: string;
  op: string;
  neg?: boolean | undefined;
  key?: string | undefined;
  value?: string | Array<string> | number | undefined;
};

/** @internal */
export const Conditions$outboundSchema: z.ZodType<
  Conditions$Outbound,
  z.ZodTypeDef,
  Conditions
> = z.object({
  type: UpdateFirewallConfigRequestBodyType$outboundSchema,
  op: Op$outboundSchema,
  neg: z.boolean().optional(),
  key: z.string().optional(),
  value: z.union([z.string(), z.array(z.string()), z.number()]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Conditions$ {
  /** @deprecated use `Conditions$inboundSchema` instead. */
  export const inboundSchema = Conditions$inboundSchema;
  /** @deprecated use `Conditions$outboundSchema` instead. */
  export const outboundSchema = Conditions$outboundSchema;
  /** @deprecated use `Conditions$Outbound` instead. */
  export type Outbound = Conditions$Outbound;
}

export function conditionsToJSON(conditions: Conditions): string {
  return JSON.stringify(Conditions$outboundSchema.parse(conditions));
}

export function conditionsFromJSON(
  jsonString: string,
): SafeParseResult<Conditions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Conditions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Conditions' from JSON`,
  );
}

/** @internal */
export const ConditionGroup$inboundSchema: z.ZodType<
  ConditionGroup,
  z.ZodTypeDef,
  unknown
> = z.object({
  conditions: z.array(z.lazy(() => Conditions$inboundSchema)),
});

/** @internal */
export type ConditionGroup$Outbound = {
  conditions: Array<Conditions$Outbound>;
};

/** @internal */
export const ConditionGroup$outboundSchema: z.ZodType<
  ConditionGroup$Outbound,
  z.ZodTypeDef,
  ConditionGroup
> = z.object({
  conditions: z.array(z.lazy(() => Conditions$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConditionGroup$ {
  /** @deprecated use `ConditionGroup$inboundSchema` instead. */
  export const inboundSchema = ConditionGroup$inboundSchema;
  /** @deprecated use `ConditionGroup$outboundSchema` instead. */
  export const outboundSchema = ConditionGroup$outboundSchema;
  /** @deprecated use `ConditionGroup$Outbound` instead. */
  export type Outbound = ConditionGroup$Outbound;
}

export function conditionGroupToJSON(conditionGroup: ConditionGroup): string {
  return JSON.stringify(ConditionGroup$outboundSchema.parse(conditionGroup));
}

export function conditionGroupFromJSON(
  jsonString: string,
): SafeParseResult<ConditionGroup, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConditionGroup$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConditionGroup' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest2ValueAction$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest2ValueAction
  > = z.nativeEnum(UpdateFirewallConfigRequestBodySecurityRequest2ValueAction);

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest2ValueAction$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateFirewallConfigRequestBodySecurityRequest2ValueAction
  > = UpdateFirewallConfigRequestBodySecurityRequest2ValueAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest2ValueAction$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest2ValueAction$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest2ValueAction$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest2ValueAction$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest2ValueAction$outboundSchema;
}

/** @internal */
export const RateLimitAlgo$inboundSchema: z.ZodNativeEnum<
  typeof RateLimitAlgo
> = z.nativeEnum(RateLimitAlgo);

/** @internal */
export const RateLimitAlgo$outboundSchema: z.ZodNativeEnum<
  typeof RateLimitAlgo
> = RateLimitAlgo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RateLimitAlgo$ {
  /** @deprecated use `RateLimitAlgo$inboundSchema` instead. */
  export const inboundSchema = RateLimitAlgo$inboundSchema;
  /** @deprecated use `RateLimitAlgo$outboundSchema` instead. */
  export const outboundSchema = RateLimitAlgo$outboundSchema;
}

/** @internal */
export const Action1$inboundSchema: z.ZodNativeEnum<typeof Action1> = z
  .nativeEnum(Action1);

/** @internal */
export const Action1$outboundSchema: z.ZodNativeEnum<typeof Action1> =
  Action1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Action1$ {
  /** @deprecated use `Action1$inboundSchema` instead. */
  export const inboundSchema = Action1$inboundSchema;
  /** @deprecated use `Action1$outboundSchema` instead. */
  export const outboundSchema = Action1$outboundSchema;
}

/** @internal */
export const RateLimitAction$inboundSchema: z.ZodType<
  RateLimitAction,
  z.ZodTypeDef,
  unknown
> = z.union([Action1$inboundSchema, z.any()]);

/** @internal */
export type RateLimitAction$Outbound = string | any;

/** @internal */
export const RateLimitAction$outboundSchema: z.ZodType<
  RateLimitAction$Outbound,
  z.ZodTypeDef,
  RateLimitAction
> = z.union([Action1$outboundSchema, z.any()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RateLimitAction$ {
  /** @deprecated use `RateLimitAction$inboundSchema` instead. */
  export const inboundSchema = RateLimitAction$inboundSchema;
  /** @deprecated use `RateLimitAction$outboundSchema` instead. */
  export const outboundSchema = RateLimitAction$outboundSchema;
  /** @deprecated use `RateLimitAction$Outbound` instead. */
  export type Outbound = RateLimitAction$Outbound;
}

export function rateLimitActionToJSON(
  rateLimitAction: RateLimitAction,
): string {
  return JSON.stringify(RateLimitAction$outboundSchema.parse(rateLimitAction));
}

export function rateLimitActionFromJSON(
  jsonString: string,
): SafeParseResult<RateLimitAction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RateLimitAction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RateLimitAction' from JSON`,
  );
}

/** @internal */
export const RateLimit1$inboundSchema: z.ZodType<
  RateLimit1,
  z.ZodTypeDef,
  unknown
> = z.object({
  algo: RateLimitAlgo$inboundSchema,
  window: z.number(),
  limit: z.number(),
  keys: z.array(z.string()),
  action: z.nullable(z.union([Action1$inboundSchema, z.any()])).optional(),
});

/** @internal */
export type RateLimit1$Outbound = {
  algo: string;
  window: number;
  limit: number;
  keys: Array<string>;
  action?: string | any | null | undefined;
};

/** @internal */
export const RateLimit1$outboundSchema: z.ZodType<
  RateLimit1$Outbound,
  z.ZodTypeDef,
  RateLimit1
> = z.object({
  algo: RateLimitAlgo$outboundSchema,
  window: z.number(),
  limit: z.number(),
  keys: z.array(z.string()),
  action: z.nullable(z.union([Action1$outboundSchema, z.any()])).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RateLimit1$ {
  /** @deprecated use `RateLimit1$inboundSchema` instead. */
  export const inboundSchema = RateLimit1$inboundSchema;
  /** @deprecated use `RateLimit1$outboundSchema` instead. */
  export const outboundSchema = RateLimit1$outboundSchema;
  /** @deprecated use `RateLimit1$Outbound` instead. */
  export type Outbound = RateLimit1$Outbound;
}

export function rateLimit1ToJSON(rateLimit1: RateLimit1): string {
  return JSON.stringify(RateLimit1$outboundSchema.parse(rateLimit1));
}

export function rateLimit1FromJSON(
  jsonString: string,
): SafeParseResult<RateLimit1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RateLimit1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RateLimit1' from JSON`,
  );
}

/** @internal */
export const RateLimit$inboundSchema: z.ZodType<
  RateLimit,
  z.ZodTypeDef,
  unknown
> = z.union([z.lazy(() => RateLimit1$inboundSchema), z.any()]);

/** @internal */
export type RateLimit$Outbound = RateLimit1$Outbound | any;

/** @internal */
export const RateLimit$outboundSchema: z.ZodType<
  RateLimit$Outbound,
  z.ZodTypeDef,
  RateLimit
> = z.union([z.lazy(() => RateLimit1$outboundSchema), z.any()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RateLimit$ {
  /** @deprecated use `RateLimit$inboundSchema` instead. */
  export const inboundSchema = RateLimit$inboundSchema;
  /** @deprecated use `RateLimit$outboundSchema` instead. */
  export const outboundSchema = RateLimit$outboundSchema;
  /** @deprecated use `RateLimit$Outbound` instead. */
  export type Outbound = RateLimit$Outbound;
}

export function rateLimitToJSON(rateLimit: RateLimit): string {
  return JSON.stringify(RateLimit$outboundSchema.parse(rateLimit));
}

export function rateLimitFromJSON(
  jsonString: string,
): SafeParseResult<RateLimit, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RateLimit$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RateLimit' from JSON`,
  );
}

/** @internal */
export const Redirect1$inboundSchema: z.ZodType<
  Redirect1,
  z.ZodTypeDef,
  unknown
> = z.object({
  location: z.string(),
  permanent: z.boolean(),
});

/** @internal */
export type Redirect1$Outbound = {
  location: string;
  permanent: boolean;
};

/** @internal */
export const Redirect1$outboundSchema: z.ZodType<
  Redirect1$Outbound,
  z.ZodTypeDef,
  Redirect1
> = z.object({
  location: z.string(),
  permanent: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Redirect1$ {
  /** @deprecated use `Redirect1$inboundSchema` instead. */
  export const inboundSchema = Redirect1$inboundSchema;
  /** @deprecated use `Redirect1$outboundSchema` instead. */
  export const outboundSchema = Redirect1$outboundSchema;
  /** @deprecated use `Redirect1$Outbound` instead. */
  export type Outbound = Redirect1$Outbound;
}

export function redirect1ToJSON(redirect1: Redirect1): string {
  return JSON.stringify(Redirect1$outboundSchema.parse(redirect1));
}

export function redirect1FromJSON(
  jsonString: string,
): SafeParseResult<Redirect1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Redirect1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Redirect1' from JSON`,
  );
}

/** @internal */
export const Redirect$inboundSchema: z.ZodType<
  Redirect,
  z.ZodTypeDef,
  unknown
> = z.union([z.lazy(() => Redirect1$inboundSchema), z.any()]);

/** @internal */
export type Redirect$Outbound = Redirect1$Outbound | any;

/** @internal */
export const Redirect$outboundSchema: z.ZodType<
  Redirect$Outbound,
  z.ZodTypeDef,
  Redirect
> = z.union([z.lazy(() => Redirect1$outboundSchema), z.any()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Redirect$ {
  /** @deprecated use `Redirect$inboundSchema` instead. */
  export const inboundSchema = Redirect$inboundSchema;
  /** @deprecated use `Redirect$outboundSchema` instead. */
  export const outboundSchema = Redirect$outboundSchema;
  /** @deprecated use `Redirect$Outbound` instead. */
  export type Outbound = Redirect$Outbound;
}

export function redirectToJSON(redirect: Redirect): string {
  return JSON.stringify(Redirect$outboundSchema.parse(redirect));
}

export function redirectFromJSON(
  jsonString: string,
): SafeParseResult<Redirect, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Redirect$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Redirect' from JSON`,
  );
}

/** @internal */
export const Mitigate$inboundSchema: z.ZodType<
  Mitigate,
  z.ZodTypeDef,
  unknown
> = z.object({
  action:
    UpdateFirewallConfigRequestBodySecurityRequest2ValueAction$inboundSchema,
  rateLimit: z.nullable(
    z.union([z.lazy(() => RateLimit1$inboundSchema), z.any()]),
  ).optional(),
  redirect: z.nullable(
    z.union([z.lazy(() => Redirect1$inboundSchema), z.any()]),
  ).optional(),
  actionDuration: z.nullable(z.string()).optional(),
  bypassSystem: z.nullable(z.boolean()).optional(),
});

/** @internal */
export type Mitigate$Outbound = {
  action: string;
  rateLimit?: RateLimit1$Outbound | any | null | undefined;
  redirect?: Redirect1$Outbound | any | null | undefined;
  actionDuration?: string | null | undefined;
  bypassSystem?: boolean | null | undefined;
};

/** @internal */
export const Mitigate$outboundSchema: z.ZodType<
  Mitigate$Outbound,
  z.ZodTypeDef,
  Mitigate
> = z.object({
  action:
    UpdateFirewallConfigRequestBodySecurityRequest2ValueAction$outboundSchema,
  rateLimit: z.nullable(
    z.union([z.lazy(() => RateLimit1$outboundSchema), z.any()]),
  ).optional(),
  redirect: z.nullable(
    z.union([z.lazy(() => Redirect1$outboundSchema), z.any()]),
  ).optional(),
  actionDuration: z.nullable(z.string()).optional(),
  bypassSystem: z.nullable(z.boolean()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Mitigate$ {
  /** @deprecated use `Mitigate$inboundSchema` instead. */
  export const inboundSchema = Mitigate$inboundSchema;
  /** @deprecated use `Mitigate$outboundSchema` instead. */
  export const outboundSchema = Mitigate$outboundSchema;
  /** @deprecated use `Mitigate$Outbound` instead. */
  export type Outbound = Mitigate$Outbound;
}

export function mitigateToJSON(mitigate: Mitigate): string {
  return JSON.stringify(Mitigate$outboundSchema.parse(mitigate));
}

export function mitigateFromJSON(
  jsonString: string,
): SafeParseResult<Mitigate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Mitigate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Mitigate' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest2Action$inboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest2Action,
    z.ZodTypeDef,
    unknown
  > = z.object({
    mitigate: z.lazy(() => Mitigate$inboundSchema).optional(),
  });

/** @internal */
export type UpdateFirewallConfigRequestBodySecurityRequest2Action$Outbound = {
  mitigate?: Mitigate$Outbound | undefined;
};

/** @internal */
export const UpdateFirewallConfigRequestBodySecurityRequest2Action$outboundSchema:
  z.ZodType<
    UpdateFirewallConfigRequestBodySecurityRequest2Action$Outbound,
    z.ZodTypeDef,
    UpdateFirewallConfigRequestBodySecurityRequest2Action
  > = z.object({
    mitigate: z.lazy(() => Mitigate$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBodySecurityRequest2Action$ {
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest2Action$inboundSchema` instead. */
  export const inboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest2Action$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest2Action$outboundSchema` instead. */
  export const outboundSchema =
    UpdateFirewallConfigRequestBodySecurityRequest2Action$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBodySecurityRequest2Action$Outbound` instead. */
  export type Outbound =
    UpdateFirewallConfigRequestBodySecurityRequest2Action$Outbound;
}

export function updateFirewallConfigRequestBodySecurityRequest2ActionToJSON(
  updateFirewallConfigRequestBodySecurityRequest2Action:
    UpdateFirewallConfigRequestBodySecurityRequest2Action,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBodySecurityRequest2Action$outboundSchema.parse(
      updateFirewallConfigRequestBodySecurityRequest2Action,
    ),
  );
}

export function updateFirewallConfigRequestBodySecurityRequest2ActionFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateFirewallConfigRequestBodySecurityRequest2Action,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateFirewallConfigRequestBodySecurityRequest2Action$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateFirewallConfigRequestBodySecurityRequest2Action' from JSON`,
  );
}

/** @internal */
export const Value$inboundSchema: z.ZodType<Value, z.ZodTypeDef, unknown> = z
  .object({
    name: z.string(),
    description: z.string().optional(),
    active: z.boolean(),
    conditionGroup: z.array(z.lazy(() => ConditionGroup$inboundSchema)),
    action: z.lazy(() =>
      UpdateFirewallConfigRequestBodySecurityRequest2Action$inboundSchema
    ),
  });

/** @internal */
export type Value$Outbound = {
  name: string;
  description?: string | undefined;
  active: boolean;
  conditionGroup: Array<ConditionGroup$Outbound>;
  action: UpdateFirewallConfigRequestBodySecurityRequest2Action$Outbound;
};

/** @internal */
export const Value$outboundSchema: z.ZodType<
  Value$Outbound,
  z.ZodTypeDef,
  Value
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  active: z.boolean(),
  conditionGroup: z.array(z.lazy(() => ConditionGroup$outboundSchema)),
  action: z.lazy(() =>
    UpdateFirewallConfigRequestBodySecurityRequest2Action$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Value$ {
  /** @deprecated use `Value$inboundSchema` instead. */
  export const inboundSchema = Value$inboundSchema;
  /** @deprecated use `Value$outboundSchema` instead. */
  export const outboundSchema = Value$outboundSchema;
  /** @deprecated use `Value$Outbound` instead. */
  export type Outbound = Value$Outbound;
}

export function valueToJSON(value: Value): string {
  return JSON.stringify(Value$outboundSchema.parse(value));
}

export function valueFromJSON(
  jsonString: string,
): SafeParseResult<Value, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Value$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Value' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBody2$inboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: UpdateFirewallConfigRequestBodyAction$inboundSchema,
  id: z.nullable(z.any()).optional(),
  value: z.lazy(() => Value$inboundSchema),
});

/** @internal */
export type UpdateFirewallConfigRequestBody2$Outbound = {
  action: string;
  id?: any | null | undefined;
  value: Value$Outbound;
};

/** @internal */
export const UpdateFirewallConfigRequestBody2$outboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody2$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRequestBody2
> = z.object({
  action: UpdateFirewallConfigRequestBodyAction$outboundSchema,
  id: z.nullable(z.any()).optional(),
  value: z.lazy(() => Value$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBody2$ {
  /** @deprecated use `UpdateFirewallConfigRequestBody2$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigRequestBody2$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody2$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigRequestBody2$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody2$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRequestBody2$Outbound;
}

export function updateFirewallConfigRequestBody2ToJSON(
  updateFirewallConfigRequestBody2: UpdateFirewallConfigRequestBody2,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBody2$outboundSchema.parse(
      updateFirewallConfigRequestBody2,
    ),
  );
}

export function updateFirewallConfigRequestBody2FromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRequestBody2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFirewallConfigRequestBody2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRequestBody2' from JSON`,
  );
}

/** @internal */
export const RequestBodyAction$inboundSchema: z.ZodNativeEnum<
  typeof RequestBodyAction
> = z.nativeEnum(RequestBodyAction);

/** @internal */
export const RequestBodyAction$outboundSchema: z.ZodNativeEnum<
  typeof RequestBodyAction
> = RequestBodyAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyAction$ {
  /** @deprecated use `RequestBodyAction$inboundSchema` instead. */
  export const inboundSchema = RequestBodyAction$inboundSchema;
  /** @deprecated use `RequestBodyAction$outboundSchema` instead. */
  export const outboundSchema = RequestBodyAction$outboundSchema;
}

/** @internal */
export const UpdateFirewallConfigRequestBody1$inboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody1,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: RequestBodyAction$inboundSchema,
  id: z.nullable(z.any()).optional(),
  value: z.boolean(),
});

/** @internal */
export type UpdateFirewallConfigRequestBody1$Outbound = {
  action: string;
  id?: any | null | undefined;
  value: boolean;
};

/** @internal */
export const UpdateFirewallConfigRequestBody1$outboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody1$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRequestBody1
> = z.object({
  action: RequestBodyAction$outboundSchema,
  id: z.nullable(z.any()).optional(),
  value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBody1$ {
  /** @deprecated use `UpdateFirewallConfigRequestBody1$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigRequestBody1$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody1$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigRequestBody1$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody1$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRequestBody1$Outbound;
}

export function updateFirewallConfigRequestBody1ToJSON(
  updateFirewallConfigRequestBody1: UpdateFirewallConfigRequestBody1,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBody1$outboundSchema.parse(
      updateFirewallConfigRequestBody1,
    ),
  );
}

export function updateFirewallConfigRequestBody1FromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRequestBody1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFirewallConfigRequestBody1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRequestBody1' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequestBody$inboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UpdateFirewallConfigRequestBody1$inboundSchema),
  z.lazy(() => UpdateFirewallConfigRequestBody2$inboundSchema),
  z.lazy(() => UpdateFirewallConfigRequestBody3$inboundSchema),
  z.lazy(() => UpdateFirewallConfigRequestBody4$inboundSchema),
  z.lazy(() => UpdateFirewallConfigRequestBody5$inboundSchema),
  z.lazy(() => RequestBody6$inboundSchema),
  z.lazy(() => RequestBody7$inboundSchema),
  z.lazy(() => RequestBody8$inboundSchema),
  z.lazy(() => RequestBody9$inboundSchema),
  z.lazy(() => RequestBody10$inboundSchema),
  z.lazy(() => Eleven$inboundSchema),
  z.lazy(() => Twelve$inboundSchema),
]);

/** @internal */
export type UpdateFirewallConfigRequestBody$Outbound =
  | UpdateFirewallConfigRequestBody1$Outbound
  | UpdateFirewallConfigRequestBody2$Outbound
  | UpdateFirewallConfigRequestBody3$Outbound
  | UpdateFirewallConfigRequestBody4$Outbound
  | UpdateFirewallConfigRequestBody5$Outbound
  | RequestBody6$Outbound
  | RequestBody7$Outbound
  | RequestBody8$Outbound
  | RequestBody9$Outbound
  | RequestBody10$Outbound
  | Eleven$Outbound
  | Twelve$Outbound;

/** @internal */
export const UpdateFirewallConfigRequestBody$outboundSchema: z.ZodType<
  UpdateFirewallConfigRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRequestBody
> = z.union([
  z.lazy(() => UpdateFirewallConfigRequestBody1$outboundSchema),
  z.lazy(() => UpdateFirewallConfigRequestBody2$outboundSchema),
  z.lazy(() => UpdateFirewallConfigRequestBody3$outboundSchema),
  z.lazy(() => UpdateFirewallConfigRequestBody4$outboundSchema),
  z.lazy(() => UpdateFirewallConfigRequestBody5$outboundSchema),
  z.lazy(() => RequestBody6$outboundSchema),
  z.lazy(() => RequestBody7$outboundSchema),
  z.lazy(() => RequestBody8$outboundSchema),
  z.lazy(() => RequestBody9$outboundSchema),
  z.lazy(() => RequestBody10$outboundSchema),
  z.lazy(() => Eleven$outboundSchema),
  z.lazy(() => Twelve$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequestBody$ {
  /** @deprecated use `UpdateFirewallConfigRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigRequestBody$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigRequestBody$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequestBody$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRequestBody$Outbound;
}

export function updateFirewallConfigRequestBodyToJSON(
  updateFirewallConfigRequestBody: UpdateFirewallConfigRequestBody,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequestBody$outboundSchema.parse(
      updateFirewallConfigRequestBody,
    ),
  );
}

export function updateFirewallConfigRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFirewallConfigRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigRequest$inboundSchema: z.ZodType<
  UpdateFirewallConfigRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectId: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
  RequestBody: z.union([
    z.lazy(() => UpdateFirewallConfigRequestBody1$inboundSchema),
    z.lazy(() => UpdateFirewallConfigRequestBody2$inboundSchema),
    z.lazy(() => UpdateFirewallConfigRequestBody3$inboundSchema),
    z.lazy(() => UpdateFirewallConfigRequestBody4$inboundSchema),
    z.lazy(() => UpdateFirewallConfigRequestBody5$inboundSchema),
    z.lazy(() => RequestBody6$inboundSchema),
    z.lazy(() => RequestBody7$inboundSchema),
    z.lazy(() => RequestBody8$inboundSchema),
    z.lazy(() => RequestBody9$inboundSchema),
    z.lazy(() => RequestBody10$inboundSchema),
    z.lazy(() => Eleven$inboundSchema),
    z.lazy(() => Twelve$inboundSchema),
  ]),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateFirewallConfigRequest$Outbound = {
  projectId: string;
  teamId?: string | undefined;
  slug?: string | undefined;
  RequestBody:
    | UpdateFirewallConfigRequestBody1$Outbound
    | UpdateFirewallConfigRequestBody2$Outbound
    | UpdateFirewallConfigRequestBody3$Outbound
    | UpdateFirewallConfigRequestBody4$Outbound
    | UpdateFirewallConfigRequestBody5$Outbound
    | RequestBody6$Outbound
    | RequestBody7$Outbound
    | RequestBody8$Outbound
    | RequestBody9$Outbound
    | RequestBody10$Outbound
    | Eleven$Outbound
    | Twelve$Outbound;
};

/** @internal */
export const UpdateFirewallConfigRequest$outboundSchema: z.ZodType<
  UpdateFirewallConfigRequest$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigRequest
> = z.object({
  projectId: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
  requestBody: z.union([
    z.lazy(() => UpdateFirewallConfigRequestBody1$outboundSchema),
    z.lazy(() => UpdateFirewallConfigRequestBody2$outboundSchema),
    z.lazy(() => UpdateFirewallConfigRequestBody3$outboundSchema),
    z.lazy(() => UpdateFirewallConfigRequestBody4$outboundSchema),
    z.lazy(() => UpdateFirewallConfigRequestBody5$outboundSchema),
    z.lazy(() => RequestBody6$outboundSchema),
    z.lazy(() => RequestBody7$outboundSchema),
    z.lazy(() => RequestBody8$outboundSchema),
    z.lazy(() => RequestBody9$outboundSchema),
    z.lazy(() => RequestBody10$outboundSchema),
    z.lazy(() => Eleven$outboundSchema),
    z.lazy(() => Twelve$outboundSchema),
  ]),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigRequest$ {
  /** @deprecated use `UpdateFirewallConfigRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigRequest$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigRequest$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigRequest$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigRequest$Outbound;
}

export function updateFirewallConfigRequestToJSON(
  updateFirewallConfigRequest: UpdateFirewallConfigRequest,
): string {
  return JSON.stringify(
    UpdateFirewallConfigRequest$outboundSchema.parse(
      updateFirewallConfigRequest,
    ),
  );
}

export function updateFirewallConfigRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFirewallConfigRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigRequest' from JSON`,
  );
}

/** @internal */
export const UpdateFirewallConfigResponseBody$inboundSchema: z.ZodType<
  UpdateFirewallConfigResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UpdateFirewallConfigResponseBody$Outbound = {};

/** @internal */
export const UpdateFirewallConfigResponseBody$outboundSchema: z.ZodType<
  UpdateFirewallConfigResponseBody$Outbound,
  z.ZodTypeDef,
  UpdateFirewallConfigResponseBody
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFirewallConfigResponseBody$ {
  /** @deprecated use `UpdateFirewallConfigResponseBody$inboundSchema` instead. */
  export const inboundSchema = UpdateFirewallConfigResponseBody$inboundSchema;
  /** @deprecated use `UpdateFirewallConfigResponseBody$outboundSchema` instead. */
  export const outboundSchema = UpdateFirewallConfigResponseBody$outboundSchema;
  /** @deprecated use `UpdateFirewallConfigResponseBody$Outbound` instead. */
  export type Outbound = UpdateFirewallConfigResponseBody$Outbound;
}

export function updateFirewallConfigResponseBodyToJSON(
  updateFirewallConfigResponseBody: UpdateFirewallConfigResponseBody,
): string {
  return JSON.stringify(
    UpdateFirewallConfigResponseBody$outboundSchema.parse(
      updateFirewallConfigResponseBody,
    ),
  );
}

export function updateFirewallConfigResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateFirewallConfigResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFirewallConfigResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFirewallConfigResponseBody' from JSON`,
  );
}
