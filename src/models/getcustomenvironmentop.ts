/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetCustomEnvironmentRequest = {
  /**
   * The unique project identifier or the project name
   */
  idOrName: string;
  /**
   * The unique custom environment identifier within the project
   */
  environmentSlugOrId: string;
  /**
   * The Team identifier to perform the request on behalf of.
   */
  teamId?: string | undefined;
  /**
   * The Team slug to perform the request on behalf of.
   */
  slug?: string | undefined;
};

export type GetCustomEnvironmentResponseBody = {};

/** @internal */
export const GetCustomEnvironmentRequest$inboundSchema: z.ZodType<
  GetCustomEnvironmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  idOrName: z.string(),
  environmentSlugOrId: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/** @internal */
export type GetCustomEnvironmentRequest$Outbound = {
  idOrName: string;
  environmentSlugOrId: string;
  teamId?: string | undefined;
  slug?: string | undefined;
};

/** @internal */
export const GetCustomEnvironmentRequest$outboundSchema: z.ZodType<
  GetCustomEnvironmentRequest$Outbound,
  z.ZodTypeDef,
  GetCustomEnvironmentRequest
> = z.object({
  idOrName: z.string(),
  environmentSlugOrId: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCustomEnvironmentRequest$ {
  /** @deprecated use `GetCustomEnvironmentRequest$inboundSchema` instead. */
  export const inboundSchema = GetCustomEnvironmentRequest$inboundSchema;
  /** @deprecated use `GetCustomEnvironmentRequest$outboundSchema` instead. */
  export const outboundSchema = GetCustomEnvironmentRequest$outboundSchema;
  /** @deprecated use `GetCustomEnvironmentRequest$Outbound` instead. */
  export type Outbound = GetCustomEnvironmentRequest$Outbound;
}

export function getCustomEnvironmentRequestToJSON(
  getCustomEnvironmentRequest: GetCustomEnvironmentRequest,
): string {
  return JSON.stringify(
    GetCustomEnvironmentRequest$outboundSchema.parse(
      getCustomEnvironmentRequest,
    ),
  );
}

export function getCustomEnvironmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetCustomEnvironmentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCustomEnvironmentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCustomEnvironmentRequest' from JSON`,
  );
}

/** @internal */
export const GetCustomEnvironmentResponseBody$inboundSchema: z.ZodType<
  GetCustomEnvironmentResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type GetCustomEnvironmentResponseBody$Outbound = {};

/** @internal */
export const GetCustomEnvironmentResponseBody$outboundSchema: z.ZodType<
  GetCustomEnvironmentResponseBody$Outbound,
  z.ZodTypeDef,
  GetCustomEnvironmentResponseBody
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCustomEnvironmentResponseBody$ {
  /** @deprecated use `GetCustomEnvironmentResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetCustomEnvironmentResponseBody$inboundSchema;
  /** @deprecated use `GetCustomEnvironmentResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetCustomEnvironmentResponseBody$outboundSchema;
  /** @deprecated use `GetCustomEnvironmentResponseBody$Outbound` instead. */
  export type Outbound = GetCustomEnvironmentResponseBody$Outbound;
}

export function getCustomEnvironmentResponseBodyToJSON(
  getCustomEnvironmentResponseBody: GetCustomEnvironmentResponseBody,
): string {
  return JSON.stringify(
    GetCustomEnvironmentResponseBody$outboundSchema.parse(
      getCustomEnvironmentResponseBody,
    ),
  );
}

export function getCustomEnvironmentResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetCustomEnvironmentResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCustomEnvironmentResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCustomEnvironmentResponseBody' from JSON`,
  );
}
